// koffee 1.4.0
var Action, Bullet, Item, Material, Timer,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

Item = require('./item');

Action = require('./action');

Timer = require('./timer');

Material = require('./material');

Bullet = (function(superClass) {
    extend(Bullet, superClass);

    function Bullet() {
        this.size = 0.2;
        this.shooter = null;
        Bullet.__super__.constructor.apply(this, arguments);
        this.addAction(new Action(this, Action.FLY, "fly", 40));
        this.addAction(new Action(this, Action.EXPLODE, "explode", 200));
    }

    Bullet.prototype.del = function() {
        if (this.mesh != null) {
            world.scene.remove(this.mesh);
            Timer.removeActionsOfObject(this);
            _.pull(world.objects, this);
            return this.mesh = null;
        }
    };

    Bullet.prototype.createMesh = function() {
        var geom;
        geom = new THREE.SphereGeometry(1, 16, 16);
        this.mesh = new THREE.Mesh(geom, Material.bullet.clone());
        return this.mesh.scale.set(this.size, this.size, this.size);
    };

    Bullet.shootFromBot = function(bot) {
        var bullet;
        bullet = new Bullet();
        world.addObject(bullet);
        bullet.direction = bot.currentDir();
        bullet.setPosition(bot.position.plus(bullet.direction.mul(0.8)));
        bullet.shooter = bot;
        bullet.mesh.material.color.set(bot.mesh.material.color);
        world.playSound('BULLET_SHOT', bot.getPos());
        if (bullet.hitObjectAtPos(bot.position.plus(bullet.direction))) {
            return;
        }
        return Timer.addAction(bullet.getActionWithId(Action.FLY));
    };

    Bullet.prototype.performAction = function(action) {
        var ref, relTime;
        relTime = action.getRelativeTime();
        if (action.id === Action.FLY) {
            return this.current_position = this.position.plus(this.direction.mul(relTime));
        } else if (action.id === Action.EXPLODE) {
            this.size = 0.2 + relTime / 2.0;
            return (ref = this.mesh) != null ? ref.material.opacity = 0.8 * (1.0 - relTime) : void 0;
        }
    };

    Bullet.prototype.step = function(step) {
        this.mesh.position.copy(this.current_position);
        return this.mesh.scale.set(this.size, this.size, this.size);
    };

    Bullet.prototype.hitObjectAtPos = function(pos) {
        var hitObject, ref, ref1;
        if ((ref = world.switchAtPos(pos)) != null) {
            ref.bulletImpact();
        }
        if (world.isInvalidPos(pos) || world.isOccupiedPos(pos)) {
            hitObject = world.getRealOccupantAtPos(pos);
            if (hitObject !== this.shooter) {
                if (hitObject != null) {
                    hitObject.bulletImpact();
                    world.playSound((ref1 = typeof hitObject.bulletHitSound === "function" ? hitObject.bulletHitSound() : void 0) != null ? ref1 : 'BULLET_HIT_OBJECT');
                } else {
                    world.playSound('BULLET_HIT_WALL', pos);
                }
                Timer.addAction(this.getActionWithId(Action.EXPLODE));
                return true;
            }
        }
        return false;
    };

    Bullet.prototype.finishAction = function(action) {
        if (action.name === "fly") {
            return this.position = this.current_position;
        }
    };

    Bullet.prototype.actionFinished = function(action) {
        if (action.id === Action.FLY) {
            if (this.hitObjectAtPos(this.position.plus(this.direction.mul(0.5)))) {
                return;
            }
            return Timer.addAction(this.getActionWithId(Action.FLY));
        } else if (action.id === Action.EXPLODE) {
            return this.del();
        }
    };

    return Bullet;

})(Item);

module.exports = Bullet;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/bullet.coffee