// koffee 1.4.0
var Action, Gate, Light, Material, Switch, Vector,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

Vector = require('./lib/vector');

Switch = require('./switch');

Light = require('./light');

Action = require('./action');

Material = require('./material');

Gate = (function(superClass) {
    extend(Gate, superClass);

    Gate.prototype.isSpaceEgoistic = function() {
        return false;
    };

    function Gate(active) {
        Gate.__super__.constructor.apply(this, arguments);
        this.ENTER_EVENT = this.addEventWithName("enter");
        this.value = 0.0;
        this.getActionWithId(Action.ROTATE).duration = 50000;
        this.sound_on = 'GATE_OPEN';
        this.sound_off = 'GATE_CLOSE';
    }

    Gate.prototype.createLight = function() {
        if (this.light) {
            return;
        }
        return this.light = new Light({
            pos: this.position,
            radius: 10.0,
            shadow: true
        });
    };

    Gate.prototype.createMesh = function() {
        var t1, t2, t3, torusRadius;
        torusRadius = 0.05;
        t1 = new THREE.TorusBufferGeometry(0.5 - torusRadius, torusRadius, 16, 32);
        this.mesh = new THREE.Mesh(t1, Material.gate);
        this.mesh.castShadow = true;
        this.mesh.receiveShadow = true;
        t2 = new THREE.TorusGeometry(0.5 - torusRadius, torusRadius, 16, 32);
        t3 = new THREE.TorusGeometry(0.5 - torusRadius, torusRadius, 16, 32);
        t2.rotateY(Vector.DEG2RAD(90));
        t3.rotateX(Vector.DEG2RAD(90));
        t2.merge(t3);
        t3.dispose();
        this.tors = new THREE.Mesh(t2, Material.gate);
        this.tors.castShadow = true;
        this.tors.receiveShadow = true;
        this.mesh.add(this.tors);
        this.mesh.castShadow = true;
        this.mesh.receiveShadow = true;
        return this.mesh;
    };

    Gate.prototype.bulletImpact = function() {};

    Gate.prototype.newCellMate = function(object) {
        if (object.name === 'player' && this.active) {
            world.playSound('GATE_WARP');
            this.events[this.ENTER_EVENT].triggerActions();
            return this.active = false;
        }
    };

    return Gate;

})(Switch);

module.exports = Gate;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F0ZS5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU1BLElBQUEsNkNBQUE7SUFBQTs7O0FBQUEsTUFBQSxHQUFXLE9BQUEsQ0FBUSxjQUFSOztBQUNYLE1BQUEsR0FBVyxPQUFBLENBQVEsVUFBUjs7QUFDWCxLQUFBLEdBQVcsT0FBQSxDQUFRLFNBQVI7O0FBQ1gsTUFBQSxHQUFXLE9BQUEsQ0FBUSxVQUFSOztBQUNYLFFBQUEsR0FBVyxPQUFBLENBQVEsWUFBUjs7QUFFTDs7O21CQUVGLGVBQUEsR0FBaUIsU0FBQTtlQUFHO0lBQUg7O0lBRWQsY0FBQyxNQUFEO1FBRUMsdUNBQUEsU0FBQTtRQUVBLElBQUMsQ0FBQSxXQUFELEdBQWUsSUFBQyxDQUFBLGdCQUFELENBQWtCLE9BQWxCO1FBQ2YsSUFBQyxDQUFBLEtBQUQsR0FBUztRQUNULElBQUMsQ0FBQSxlQUFELENBQWlCLE1BQU0sQ0FBQyxNQUF4QixDQUErQixDQUFDLFFBQWhDLEdBQTJDO1FBQzNDLElBQUMsQ0FBQSxRQUFELEdBQWE7UUFDYixJQUFDLENBQUEsU0FBRCxHQUFhO0lBUmQ7O21CQVVILFdBQUEsR0FBYSxTQUFBO1FBRVQsSUFBVSxJQUFDLENBQUEsS0FBWDtBQUFBLG1CQUFBOztlQUNBLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBSSxLQUFKLENBQ0w7WUFBQSxHQUFBLEVBQVEsSUFBQyxDQUFBLFFBQVQ7WUFDQSxNQUFBLEVBQVEsSUFEUjtZQUVBLE1BQUEsRUFBUSxJQUZSO1NBREs7SUFIQTs7bUJBUWIsVUFBQSxHQUFZLFNBQUE7QUFFUixZQUFBO1FBQUEsV0FBQSxHQUFjO1FBQ2QsRUFBQSxHQUFLLElBQUksS0FBSyxDQUFDLG1CQUFWLENBQThCLEdBQUEsR0FBSSxXQUFsQyxFQUErQyxXQUEvQyxFQUE0RCxFQUE1RCxFQUFnRSxFQUFoRTtRQUVMLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBSSxLQUFLLENBQUMsSUFBVixDQUFlLEVBQWYsRUFBbUIsUUFBUSxDQUFDLElBQTVCO1FBQ1IsSUFBQyxDQUFBLElBQUksQ0FBQyxVQUFOLEdBQW1CO1FBQ25CLElBQUMsQ0FBQSxJQUFJLENBQUMsYUFBTixHQUFzQjtRQUV0QixFQUFBLEdBQUssSUFBSSxLQUFLLENBQUMsYUFBVixDQUF3QixHQUFBLEdBQUksV0FBNUIsRUFBeUMsV0FBekMsRUFBc0QsRUFBdEQsRUFBMEQsRUFBMUQ7UUFDTCxFQUFBLEdBQUssSUFBSSxLQUFLLENBQUMsYUFBVixDQUF3QixHQUFBLEdBQUksV0FBNUIsRUFBeUMsV0FBekMsRUFBc0QsRUFBdEQsRUFBMEQsRUFBMUQ7UUFDTCxFQUFFLENBQUMsT0FBSCxDQUFXLE1BQU0sQ0FBQyxPQUFQLENBQWUsRUFBZixDQUFYO1FBQ0EsRUFBRSxDQUFDLE9BQUgsQ0FBVyxNQUFNLENBQUMsT0FBUCxDQUFlLEVBQWYsQ0FBWDtRQUNBLEVBQUUsQ0FBQyxLQUFILENBQVMsRUFBVDtRQUNBLEVBQUUsQ0FBQyxPQUFILENBQUE7UUFDQSxJQUFDLENBQUEsSUFBRCxHQUFRLElBQUksS0FBSyxDQUFDLElBQVYsQ0FBZSxFQUFmLEVBQW1CLFFBQVEsQ0FBQyxJQUE1QjtRQUNSLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBTixHQUFtQjtRQUNuQixJQUFDLENBQUEsSUFBSSxDQUFDLGFBQU4sR0FBc0I7UUFDdEIsSUFBQyxDQUFBLElBQUksQ0FBQyxHQUFOLENBQVUsSUFBQyxDQUFBLElBQVg7UUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLFVBQU4sR0FBbUI7UUFDbkIsSUFBQyxDQUFBLElBQUksQ0FBQyxhQUFOLEdBQXNCO2VBQ3RCLElBQUMsQ0FBQTtJQXJCTzs7bUJBdUJaLFlBQUEsR0FBYyxTQUFBLEdBQUE7O21CQUVkLFdBQUEsR0FBYSxTQUFDLE1BQUQ7UUFFVCxJQUFHLE1BQU0sQ0FBQyxJQUFQLEtBQWUsUUFBZixJQUE0QixJQUFDLENBQUEsTUFBaEM7WUFDSSxLQUFLLENBQUMsU0FBTixDQUFnQixXQUFoQjtZQUNBLElBQUMsQ0FBQSxNQUFPLENBQUEsSUFBQyxDQUFBLFdBQUQsQ0FBYSxDQUFDLGNBQXRCLENBQUE7bUJBQ0EsSUFBQyxDQUFBLE1BQUQsR0FBVSxNQUhkOztJQUZTOzs7O0dBL0NFOztBQXNEbkIsTUFBTSxDQUFDLE9BQVAsR0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIjICAwMDAwMDAwICAgIDAwMDAwMDAgICAwMDAwMDAwMDAgIDAwMDAwMDAwXG4jIDAwMCAgICAgICAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgXG4jIDAwMCAgMDAwMCAgMDAwMDAwMDAwICAgICAwMDAgICAgIDAwMDAwMDAgXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgXG4jICAwMDAwMDAwICAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMDAwMDAwXG5cblZlY3RvciAgID0gcmVxdWlyZSAnLi9saWIvdmVjdG9yJ1xuU3dpdGNoICAgPSByZXF1aXJlICcuL3N3aXRjaCdcbkxpZ2h0ICAgID0gcmVxdWlyZSAnLi9saWdodCdcbkFjdGlvbiAgID0gcmVxdWlyZSAnLi9hY3Rpb24nXG5NYXRlcmlhbCA9IHJlcXVpcmUgJy4vbWF0ZXJpYWwnXG5cbmNsYXNzIEdhdGUgZXh0ZW5kcyBTd2l0Y2hcbiAgICBcbiAgICBpc1NwYWNlRWdvaXN0aWM6IC0+IGZhbHNlXG5cbiAgICBAOiAoYWN0aXZlKSAtPlxuICAgICAgICBcbiAgICAgICAgc3VwZXJcbiAgICAgICAgXG4gICAgICAgIEBFTlRFUl9FVkVOVCA9IEBhZGRFdmVudFdpdGhOYW1lIFwiZW50ZXJcIlxuICAgICAgICBAdmFsdWUgPSAwLjBcbiAgICAgICAgQGdldEFjdGlvbldpdGhJZChBY3Rpb24uUk9UQVRFKS5kdXJhdGlvbiA9IDUwMDAwIFxuICAgICAgICBAc291bmRfb24gID0gJ0dBVEVfT1BFTidcbiAgICAgICAgQHNvdW5kX29mZiA9ICdHQVRFX0NMT1NFJ1xuXG4gICAgY3JlYXRlTGlnaHQ6IC0+IFxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGlmIEBsaWdodCBcbiAgICAgICAgQGxpZ2h0ID0gbmV3IExpZ2h0IFxuICAgICAgICAgICAgcG9zOiAgICBAcG9zaXRpb25cbiAgICAgICAgICAgIHJhZGl1czogMTAuMFxuICAgICAgICAgICAgc2hhZG93OiB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICBjcmVhdGVNZXNoOiAtPiBcbiAgICAgICAgXG4gICAgICAgIHRvcnVzUmFkaXVzID0gMC4wNVxuICAgICAgICB0MSA9IG5ldyBUSFJFRS5Ub3J1c0J1ZmZlckdlb21ldHJ5IDAuNS10b3J1c1JhZGl1cywgdG9ydXNSYWRpdXMsIDE2LCAzMlxuICAgICAgICAgICAgXG4gICAgICAgIEBtZXNoID0gbmV3IFRIUkVFLk1lc2ggdDEsIE1hdGVyaWFsLmdhdGVcbiAgICAgICAgQG1lc2guY2FzdFNoYWRvdyA9IHRydWVcbiAgICAgICAgQG1lc2gucmVjZWl2ZVNoYWRvdyA9IHRydWVcbiAgICAgICAgXG4gICAgICAgIHQyID0gbmV3IFRIUkVFLlRvcnVzR2VvbWV0cnkgMC41LXRvcnVzUmFkaXVzLCB0b3J1c1JhZGl1cywgMTYsIDMyXG4gICAgICAgIHQzID0gbmV3IFRIUkVFLlRvcnVzR2VvbWV0cnkgMC41LXRvcnVzUmFkaXVzLCB0b3J1c1JhZGl1cywgMTYsIDMyXG4gICAgICAgIHQyLnJvdGF0ZVkgVmVjdG9yLkRFRzJSQUQgOTAgXG4gICAgICAgIHQzLnJvdGF0ZVggVmVjdG9yLkRFRzJSQUQgOTAgXG4gICAgICAgIHQyLm1lcmdlIHQzXG4gICAgICAgIHQzLmRpc3Bvc2UoKVxuICAgICAgICBAdG9ycyA9IG5ldyBUSFJFRS5NZXNoIHQyLCBNYXRlcmlhbC5nYXRlXG4gICAgICAgIEB0b3JzLmNhc3RTaGFkb3cgPSB0cnVlXG4gICAgICAgIEB0b3JzLnJlY2VpdmVTaGFkb3cgPSB0cnVlXG4gICAgICAgIEBtZXNoLmFkZCBAdG9yc1xuICAgICAgICBAbWVzaC5jYXN0U2hhZG93ID0gdHJ1ZVxuICAgICAgICBAbWVzaC5yZWNlaXZlU2hhZG93ID0gdHJ1ZVxuICAgICAgICBAbWVzaFxuICAgIFxuICAgIGJ1bGxldEltcGFjdDogLT5cblxuICAgIG5ld0NlbGxNYXRlOiAob2JqZWN0KSAtPlxuICAgICAgICBcbiAgICAgICAgaWYgb2JqZWN0Lm5hbWUgPT0gJ3BsYXllcicgYW5kIEBhY3RpdmVcbiAgICAgICAgICAgIHdvcmxkLnBsYXlTb3VuZCAnR0FURV9XQVJQJ1xuICAgICAgICAgICAgQGV2ZW50c1tARU5URVJfRVZFTlRdLnRyaWdnZXJBY3Rpb25zKCkgXG4gICAgICAgICAgICBAYWN0aXZlID0gZmFsc2VcbiAgICAgICAgICAgICAgICBcbm1vZHVsZS5leHBvcnRzID0gR2F0ZVxuIl19
//# sourceURL=../coffee/gate.coffee