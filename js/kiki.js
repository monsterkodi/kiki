// koffee 1.4.0
var Kiki, World, keyinfo, post, ref,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), post = ref.post, keyinfo = ref.keyinfo;

World = require('./world');

Kiki = (function() {
    function Kiki(view) {
        this.view = view;
        this.resized = bind(this.resized, this);
        this.onKeyUp = bind(this.onKeyUp, this);
        this.onKeyDown = bind(this.onKeyDown, this);
        this.animate = bind(this.animate, this);
        this.paused = false;
        post.on('pause', (function(_this) {
            return function() {
                return _this.paused = true;
            };
        })(this));
        post.on('resume', (function(_this) {
            return function() {
                return _this.paused = false;
            };
        })(this));
        this.view.onkeydown = this.onKeyDown;
        this.view.onkeyup = this.onKeyUp;
        this.view.focus();
    }

    Kiki.prototype.start = function() {
        this.world = World.init(this.view);
        this.view.focus();
        this.animate();
        return this.interval = setInterval(this.animate, 16);
    };

    Kiki.prototype.animate = function() {
        if (!this.paused) {
            return this.world.step();
        }
    };

    Kiki.prototype.onKeyDown = function(event) {
        var combo, key, mod, ref1;
        ref1 = keyinfo.forEvent(event), mod = ref1.mod, key = ref1.key, combo = ref1.combo;
        if (!combo) {
            return;
        }
        if (key === 'right click') {
            return;
        }
        return this.world.modKeyComboEventDown(mod, key, combo, event);
    };

    Kiki.prototype.onKeyUp = function(event) {
        var combo, key, mod, ref1;
        ref1 = keyinfo.forEvent(event), mod = ref1.mod, key = ref1.key, combo = ref1.combo;
        if (!combo) {
            return;
        }
        if (key === 'right click') {
            return;
        }
        return this.world.modKeyComboEventUp(mod, key, combo, event);
    };

    Kiki.prototype.resized = function() {
        return this.world.resized(this.view.clientWidth, this.view.clientHeight);
    };

    return Kiki;

})();

module.exports = Kiki;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2lraS5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU9BLElBQUEsK0JBQUE7SUFBQTs7QUFBQSxNQUFvQixPQUFBLENBQVEsS0FBUixDQUFwQixFQUFFLGVBQUYsRUFBUTs7QUFFUixLQUFBLEdBQVEsT0FBQSxDQUFRLFNBQVI7O0FBRUY7SUFFQyxjQUFDLElBQUQ7UUFBQyxJQUFDLENBQUEsT0FBRDs7Ozs7UUFFQSxJQUFDLENBQUEsTUFBRCxHQUFVO1FBRVYsSUFBSSxDQUFDLEVBQUwsQ0FBUSxPQUFSLEVBQWlCLENBQUEsU0FBQSxLQUFBO21CQUFBLFNBQUE7dUJBQUcsS0FBQyxDQUFBLE1BQUQsR0FBVTtZQUFiO1FBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUFqQjtRQUNBLElBQUksQ0FBQyxFQUFMLENBQVEsUUFBUixFQUFpQixDQUFBLFNBQUEsS0FBQTttQkFBQSxTQUFBO3VCQUFHLEtBQUMsQ0FBQSxNQUFELEdBQVU7WUFBYjtRQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBakI7UUFFQSxJQUFDLENBQUEsSUFBSSxDQUFDLFNBQU4sR0FBa0IsSUFBQyxDQUFBO1FBQ25CLElBQUMsQ0FBQSxJQUFJLENBQUMsT0FBTixHQUFrQixJQUFDLENBQUE7UUFFbkIsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFOLENBQUE7SUFWRDs7bUJBa0JILEtBQUEsR0FBTyxTQUFBO1FBRUgsSUFBQyxDQUFBLEtBQUQsR0FBUyxLQUFLLENBQUMsSUFBTixDQUFXLElBQUMsQ0FBQSxJQUFaO1FBQ1QsSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFOLENBQUE7UUFDQSxJQUFDLENBQUEsT0FBRCxDQUFBO2VBQ0EsSUFBQyxDQUFBLFFBQUQsR0FBWSxXQUFBLENBQVksSUFBQyxDQUFBLE9BQWIsRUFBc0IsRUFBdEI7SUFMVDs7bUJBYVAsT0FBQSxHQUFTLFNBQUE7UUFFTCxJQUFHLENBQUksSUFBQyxDQUFBLE1BQVI7bUJBQ0ksSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQUEsRUFESjs7SUFGSzs7bUJBV1QsU0FBQSxHQUFXLFNBQUMsS0FBRDtBQUVQLFlBQUE7UUFBQSxPQUFvQixPQUFPLENBQUMsUUFBUixDQUFpQixLQUFqQixDQUFwQixFQUFDLGNBQUQsRUFBTSxjQUFOLEVBQVc7UUFDWCxJQUFVLENBQUksS0FBZDtBQUFBLG1CQUFBOztRQUNBLElBQVUsR0FBQSxLQUFPLGFBQWpCO0FBQUEsbUJBQUE7O2VBQ0EsSUFBQyxDQUFBLEtBQUssQ0FBQyxvQkFBUCxDQUE0QixHQUE1QixFQUFpQyxHQUFqQyxFQUFzQyxLQUF0QyxFQUE2QyxLQUE3QztJQUxPOzttQkFPWCxPQUFBLEdBQVMsU0FBQyxLQUFEO0FBRUwsWUFBQTtRQUFBLE9BQW9CLE9BQU8sQ0FBQyxRQUFSLENBQWlCLEtBQWpCLENBQXBCLEVBQUMsY0FBRCxFQUFNLGNBQU4sRUFBVztRQUNYLElBQVUsQ0FBSSxLQUFkO0FBQUEsbUJBQUE7O1FBQ0EsSUFBVSxHQUFBLEtBQU8sYUFBakI7QUFBQSxtQkFBQTs7ZUFDQSxJQUFDLENBQUEsS0FBSyxDQUFDLGtCQUFQLENBQTRCLEdBQTVCLEVBQWlDLEdBQWpDLEVBQXNDLEtBQXRDLEVBQTZDLEtBQTdDO0lBTEs7O21CQU9ULE9BQUEsR0FBUyxTQUFBO2VBQUcsSUFBQyxDQUFBLEtBQUssQ0FBQyxPQUFQLENBQWUsSUFBQyxDQUFBLElBQUksQ0FBQyxXQUFyQixFQUFrQyxJQUFDLENBQUEsSUFBSSxDQUFDLFlBQXhDO0lBQUg7Ozs7OztBQUViLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiXG4jIDAwMCAgIDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMFxuIyAwMDAgIDAwMCAgIDAwMCAgMDAwICAwMDAgICAwMDBcbiMgMDAwMDAwMCAgICAwMDAgIDAwMDAwMDAgICAgMDAwXG4jIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMCAgIDAwMFxuIyAwMDAgICAwMDAgIDAwMCAgMDAwICAgMDAwICAwMDBcblxueyBwb3N0LCBrZXlpbmZvIH0gPSByZXF1aXJlICdreGsnXG5cbldvcmxkID0gcmVxdWlyZSAnLi93b3JsZCdcblxuY2xhc3MgS2lraVxuICAgIFxuICAgIEA6IChAdmlldykgLT5cbiAgICAgICAgXG4gICAgICAgIEBwYXVzZWQgPSBmYWxzZVxuICAgICAgICBcbiAgICAgICAgcG9zdC5vbiAncGF1c2UnICA9PiBAcGF1c2VkID0gdHJ1ZVxuICAgICAgICBwb3N0Lm9uICdyZXN1bWUnID0+IEBwYXVzZWQgPSBmYWxzZVxuICAgICAgICAgICAgICAgIFxuICAgICAgICBAdmlldy5vbmtleWRvd24gPSBAb25LZXlEb3duXG4gICAgICAgIEB2aWV3Lm9ua2V5dXAgICA9IEBvbktleVVwXG4gICAgICAgIFxuICAgICAgICBAdmlldy5mb2N1cygpXG4gICAgXG4gICAgIyAgMDAwMDAwMCAgMDAwMDAwMDAwICAgMDAwMDAwMCAgIDAwMDAwMDAwICAgMDAwMDAwMDAwICBcbiAgICAjIDAwMCAgICAgICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIFxuICAgICMgMDAwMDAwMCAgICAgIDAwMCAgICAgMDAwMDAwMDAwICAwMDAwMDAwICAgICAgIDAwMCAgICAgXG4gICAgIyAgICAgIDAwMCAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwICAgICBcbiAgICAjIDAwMDAwMDAgICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIFxuICAgIFxuICAgIHN0YXJ0OiAtPiBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgQHdvcmxkID0gV29ybGQuaW5pdCBAdmlld1xuICAgICAgICBAdmlldy5mb2N1cygpXG4gICAgICAgIEBhbmltYXRlKClcbiAgICAgICAgQGludGVydmFsID0gc2V0SW50ZXJ2YWwgQGFuaW1hdGUsIDE2XG5cbiAgICAjICAwMDAwMDAwICAgMDAwICAgMDAwICAwMDAgIDAwICAgICAwMCAgIDAwMDAwMDAgICAwMDAwMDAwMDAgIDAwMDAwMDAwICBcbiAgICAjIDAwMCAgIDAwMCAgMDAwMCAgMDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgICBcbiAgICAjIDAwMDAwMDAwMCAgMDAwIDAgMDAwICAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMDAwICAgICAwMDAgICAgIDAwMDAwMDAgICBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAwMDAwICAwMDAgIDAwMCAwIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgICBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMDAwMDAwICBcbiAgICBcbiAgICBhbmltYXRlOiA9PlxuICAgICAgICAjIHJlcXVlc3RBbmltYXRpb25GcmFtZSBAYW5pbWF0ZVxuICAgICAgICBpZiBub3QgQHBhdXNlZFxuICAgICAgICAgICAgQHdvcmxkLnN0ZXAoKVxuXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgIFxuICAgICMgMDAwICAwMDAgICAwMDAgICAgICAgIDAwMCAwMDAgICBcbiAgICAjIDAwMDAwMDAgICAgMDAwMDAwMCAgICAgMDAwMDAgICAgXG4gICAgIyAwMDAgIDAwMCAgIDAwMCAgICAgICAgICAwMDAgICAgIFxuICAgICMgMDAwICAgMDAwICAwMDAwMDAwMCAgICAgMDAwICAgICBcbiAgICBcbiAgICBvbktleURvd246IChldmVudCkgPT5cbiAgICAgICAgXG4gICAgICAgIHttb2QsIGtleSwgY29tYm99ID0ga2V5aW5mby5mb3JFdmVudCBldmVudFxuICAgICAgICByZXR1cm4gaWYgbm90IGNvbWJvXG4gICAgICAgIHJldHVybiBpZiBrZXkgPT0gJ3JpZ2h0IGNsaWNrJyAjIHdlaXJkIHJpZ2h0IGNvbW1hbmQga2V5XG4gICAgICAgIEB3b3JsZC5tb2RLZXlDb21ib0V2ZW50RG93biBtb2QsIGtleSwgY29tYm8sIGV2ZW50XG4gICBcbiAgICBvbktleVVwOiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICB7bW9kLCBrZXksIGNvbWJvfSA9IGtleWluZm8uZm9yRXZlbnQgZXZlbnQgICAgICAgIFxuICAgICAgICByZXR1cm4gaWYgbm90IGNvbWJvXG4gICAgICAgIHJldHVybiBpZiBrZXkgPT0gJ3JpZ2h0IGNsaWNrJyAjIHdlaXJkIHJpZ2h0IGNvbW1hbmQga2V5XG4gICAgICAgIEB3b3JsZC5tb2RLZXlDb21ib0V2ZW50VXAgICBtb2QsIGtleSwgY29tYm8sIGV2ZW50XG4gICAgXG4gICAgcmVzaXplZDogPT4gQHdvcmxkLnJlc2l6ZWQgQHZpZXcuY2xpZW50V2lkdGgsIEB2aWV3LmNsaWVudEhlaWdodFxuICAgIFxubW9kdWxlLmV4cG9ydHMgPSBLaWtpXG4iXX0=
//# sourceURL=../coffee/kiki.coffee