// koffee 1.4.0
var klog;

klog = require('kxk').klog;

module.exports = {
    name: "sandbox",
    design: 'Michael Abel',
    scheme: "bronze",
    size: [9, 9, 6],
    help: "activate the exit!\n\nall you have to do\nis to put nine stones\ninto the sandbox\nand shoot at the switch",
    player: {
        coordinates: [4, 6, 2],
        orientation: rotx90
    },
    exits: [
        {
            name: "exit",
            active: 0,
            position: [0, 0, 0]
        }
    ],
    create: function() {
        var Switch, switched, swtch;
        switched = function() {
            var i, j, k, l, occupied;
            occupied = true;
            for (i = k = 3; k < 6; i = ++k) {
                for (j = l = 3; l < 6; j = ++l) {
                    if (world.isUnoccupiedPos([i, j, 0])) {
                        klog("isUnoccupiedPos " + i + " " + j);
                        occupied = false;
                    }
                }
            }
            klog("toggle? " + occupied);
            if (occupied) {
                return world.toggle("exit");
            }
        };
        Switch = require('../switch');
        swtch = new Switch;
        swtch.getEventWithName("switched").addAction(world.continuous(switched));
        world.addObjectAtPos(swtch, 0, 5, 0);
        world.addObjectPoly('Wall', [[2, 2, 0], [2, 6, 0], [6, 6, 0], [6, 2, 0]], 1);
        world.addObjectAtPos('Stone', 3, 4, 2);
        world.addObjectAtPos('Stone', 3, 5, 1);
        world.addObjectAtPos('Stone', 5, 3, 1);
        world.addObjectAtPos('Stone', 5, 4, 2);
        world.addObjectAtPos('Stone', 3, 6, 1);
        world.addObjectAtPos('Stone', 4, 6, 1);
        world.addObjectAtPos('Stone', 3, 2, 1);
        world.addObjectAtPos('Stone', 5, 2, 1);
        world.addObjectAtPos('Stone', 6, 4, 1);
        world.addObjectAtPos('Stone', 6, 3, 1);
        world.addObjectAtPos('Stone', 5, 1, 0);
        return world.addObjectAtPos('Stone', 1, 7, 0);
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveC5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU9BLElBQUE7O0FBQUUsT0FBUyxPQUFBLENBQVEsS0FBUjs7QUFFWCxNQUFNLENBQUMsT0FBUCxHQUNJO0lBQUEsSUFBQSxFQUFZLFNBQVo7SUFDQSxNQUFBLEVBQVksY0FEWjtJQUVBLE1BQUEsRUFBWSxRQUZaO0lBR0EsSUFBQSxFQUFZLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBSFo7SUFJQSxJQUFBLEVBQVksNEdBSlo7SUFZQSxNQUFBLEVBQ0k7UUFBQSxXQUFBLEVBQWMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBZDtRQUNBLFdBQUEsRUFBYyxNQURkO0tBYko7SUFlQSxLQUFBLEVBQVU7UUFDTjtZQUFBLElBQUEsRUFBYyxNQUFkO1lBQ0EsTUFBQSxFQUFjLENBRGQ7WUFFQSxRQUFBLEVBQWMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FGZDtTQURNO0tBZlY7SUFvQkEsTUFBQSxFQUFRLFNBQUE7QUFFSixZQUFBO1FBQUEsUUFBQSxHQUFXLFNBQUE7QUFDUCxnQkFBQTtZQUFBLFFBQUEsR0FBVztBQUNYLGlCQUFTLHlCQUFUO0FBQ0kscUJBQVMseUJBQVQ7b0JBQ0ksSUFBRyxLQUFLLENBQUMsZUFBTixDQUFzQixDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUF0QixDQUFIO3dCQUNJLElBQUEsQ0FBSyxrQkFBQSxHQUFtQixDQUFuQixHQUFxQixHQUFyQixHQUF3QixDQUE3Qjt3QkFDQSxRQUFBLEdBQVcsTUFGZjs7QUFESjtBQURKO1lBS0EsSUFBQSxDQUFLLFVBQUEsR0FBVyxRQUFoQjtZQUNBLElBQXVCLFFBQXZCO3VCQUFBLEtBQUssQ0FBQyxNQUFOLENBQWEsTUFBYixFQUFBOztRQVJPO1FBVVgsTUFBQSxHQUFTLE9BQUEsQ0FBUSxXQUFSO1FBQ1QsS0FBQSxHQUFRLElBQUk7UUFDWixLQUFLLENBQUMsZ0JBQU4sQ0FBdUIsVUFBdkIsQ0FBa0MsQ0FBQyxTQUFuQyxDQUE2QyxLQUFLLENBQUMsVUFBTixDQUFpQixRQUFqQixDQUE3QztRQUVBLEtBQUssQ0FBQyxjQUFOLENBQXFCLEtBQXJCLEVBQTZCLENBQTdCLEVBQStCLENBQS9CLEVBQWlDLENBQWpDO1FBQ0EsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsTUFBcEIsRUFBNEIsQ0FBRSxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUFGLEVBQVcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsQ0FBWCxFQUFvQixDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUFwQixFQUE2QixDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUE3QixDQUE1QixFQUFvRSxDQUFwRTtRQUdBLEtBQUssQ0FBQyxjQUFOLENBQXFCLE9BQXJCLEVBQThCLENBQTlCLEVBQWdDLENBQWhDLEVBQWtDLENBQWxDO1FBQ0EsS0FBSyxDQUFDLGNBQU4sQ0FBcUIsT0FBckIsRUFBOEIsQ0FBOUIsRUFBZ0MsQ0FBaEMsRUFBa0MsQ0FBbEM7UUFDQSxLQUFLLENBQUMsY0FBTixDQUFxQixPQUFyQixFQUE4QixDQUE5QixFQUFnQyxDQUFoQyxFQUFrQyxDQUFsQztRQUNBLEtBQUssQ0FBQyxjQUFOLENBQXFCLE9BQXJCLEVBQThCLENBQTlCLEVBQWdDLENBQWhDLEVBQWtDLENBQWxDO1FBRUEsS0FBSyxDQUFDLGNBQU4sQ0FBcUIsT0FBckIsRUFBOEIsQ0FBOUIsRUFBZ0MsQ0FBaEMsRUFBa0MsQ0FBbEM7UUFDQSxLQUFLLENBQUMsY0FBTixDQUFxQixPQUFyQixFQUE4QixDQUE5QixFQUFnQyxDQUFoQyxFQUFrQyxDQUFsQztRQUNBLEtBQUssQ0FBQyxjQUFOLENBQXFCLE9BQXJCLEVBQThCLENBQTlCLEVBQWdDLENBQWhDLEVBQWtDLENBQWxDO1FBQ0EsS0FBSyxDQUFDLGNBQU4sQ0FBcUIsT0FBckIsRUFBOEIsQ0FBOUIsRUFBZ0MsQ0FBaEMsRUFBa0MsQ0FBbEM7UUFDQSxLQUFLLENBQUMsY0FBTixDQUFxQixPQUFyQixFQUE4QixDQUE5QixFQUFnQyxDQUFoQyxFQUFrQyxDQUFsQztRQUNBLEtBQUssQ0FBQyxjQUFOLENBQXFCLE9BQXJCLEVBQThCLENBQTlCLEVBQWdDLENBQWhDLEVBQWtDLENBQWxDO1FBRUEsS0FBSyxDQUFDLGNBQU4sQ0FBcUIsT0FBckIsRUFBOEIsQ0FBOUIsRUFBZ0MsQ0FBaEMsRUFBa0MsQ0FBbEM7ZUFDQSxLQUFLLENBQUMsY0FBTixDQUFxQixPQUFyQixFQUE4QixDQUE5QixFQUFnQyxDQUFoQyxFQUFrQyxDQUFsQztJQWpDSSxDQXBCUiIsInNvdXJjZXNDb250ZW50IjpbIlxuIyAgICAwMDAwMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAwMDAwICAgICAwMDAwMDAwICAgMDAwICAgMDAwXG4jICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgMDAwIDAwMCBcbiMgICAwMDAwMDAwICAgMDAwMDAwMDAwICAwMDAgMCAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAgICAwMDAgICAgMDAwMDAgIFxuIyAgICAgICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgIDAwMCAwMDAgXG4jICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwICAgIDAwMDAwMDAgICAgIDAwMDAwMDAgICAwMDAgICAwMDBcblxueyBrbG9nIH0gPSByZXF1aXJlICdreGsnXG5cbm1vZHVsZS5leHBvcnRzID0gICAgXG4gICAgbmFtZTogICAgICAgXCJzYW5kYm94XCJcbiAgICBkZXNpZ246ICAgICAnTWljaGFlbCBBYmVsJ1xuICAgIHNjaGVtZTogICAgIFwiYnJvbnplXCJcbiAgICBzaXplOiAgICAgICBbOSw5LDZdXG4gICAgaGVscDogICAgICAgXCJcIlwiXG4gICAgICAgICAgICAgICAgYWN0aXZhdGUgdGhlIGV4aXQhXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYWxsIHlvdSBoYXZlIHRvIGRvXG4gICAgICAgICAgICAgICAgaXMgdG8gcHV0IG5pbmUgc3RvbmVzXG4gICAgICAgICAgICAgICAgaW50byB0aGUgc2FuZGJveFxuICAgICAgICAgICAgICAgIGFuZCBzaG9vdCBhdCB0aGUgc3dpdGNoXG4gICAgICAgICAgICAgICAgXCJcIlwiXG4gICAgcGxheWVyOiAgICAgXG4gICAgICAgIGNvb3JkaW5hdGVzOiAgWzQsNiwyXVxuICAgICAgICBvcmllbnRhdGlvbjogIHJvdHg5MFxuICAgIGV4aXRzOiAgICBbXG4gICAgICAgIG5hbWU6ICAgICAgICAgXCJleGl0XCJcbiAgICAgICAgYWN0aXZlOiAgICAgICAwXG4gICAgICAgIHBvc2l0aW9uOiAgICAgWzAsMCwwXVxuICAgIF1cbiAgICBjcmVhdGU6IC0+XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2hlZCA9IC0+XG4gICAgICAgICAgICBvY2N1cGllZCA9IHRydWVcbiAgICAgICAgICAgIGZvciBpIGluIFszLi4uNl1cbiAgICAgICAgICAgICAgICBmb3IgaiBpbiBbMy4uLjZdXG4gICAgICAgICAgICAgICAgICAgIGlmIHdvcmxkLmlzVW5vY2N1cGllZFBvcyBbaSxqLDBdXG4gICAgICAgICAgICAgICAgICAgICAgICBrbG9nIFwiaXNVbm9jY3VwaWVkUG9zICN7aX0gI3tqfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvY2N1cGllZCA9IGZhbHNlXG4gICAgICAgICAgICBrbG9nIFwidG9nZ2xlPyAje29jY3VwaWVkfVwiICAgIFxuICAgICAgICAgICAgd29ybGQudG9nZ2xlIFwiZXhpdFwiIGlmIG9jY3VwaWVkXG4gICAgICAgICAgICBcbiAgICAgICAgU3dpdGNoID0gcmVxdWlyZSAnLi4vc3dpdGNoJyAgICBcbiAgICAgICAgc3d0Y2ggPSBuZXcgU3dpdGNoXG4gICAgICAgIHN3dGNoLmdldEV2ZW50V2l0aE5hbWUoXCJzd2l0Y2hlZFwiKS5hZGRBY3Rpb24gd29ybGQuY29udGludW91cyBzd2l0Y2hlZFxuICAgICAgICAgICBcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3Mgc3d0Y2ggLCAwLDUsMFxuICAgICAgICB3b3JsZC5hZGRPYmplY3RQb2x5ICdXYWxsJywgWyBbMiwyLDBdLCBbMiw2LDBdLCBbNiw2LDBdLCBbNiwyLDBdIF0sIDFcbiAgICAgICAgXG4gICAgICAgICNpbnNpZGUgICAgXG4gICAgICAgIHdvcmxkLmFkZE9iamVjdEF0UG9zICdTdG9uZScsIDMsNCwyXG4gICAgICAgIHdvcmxkLmFkZE9iamVjdEF0UG9zICdTdG9uZScsIDMsNSwxXG4gICAgICAgIHdvcmxkLmFkZE9iamVjdEF0UG9zICdTdG9uZScsIDUsMywxXG4gICAgICAgIHdvcmxkLmFkZE9iamVjdEF0UG9zICdTdG9uZScsIDUsNCwyXG4gICAgICAgICNib3JkZXJcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgMyw2LDFcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgNCw2LDFcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgMywyLDFcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgNSwyLDFcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgNiw0LDFcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgNiwzLDFcbiAgICAgICAgI291dHNpZGVcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgNSwxLDBcbiAgICAgICAgd29ybGQuYWRkT2JqZWN0QXRQb3MgJ1N0b25lJywgMSw3LDBcbiAgICAgICAgIl19
//# sourceURL=../../coffee/levels/sandbox.coffee