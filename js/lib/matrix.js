// koffee 1.4.0
var Matrix, Quaternion, Vector, log;

log = require('../tools/log');

Quaternion = require('./quaternion');

Vector = require('./vector');

Matrix = (function() {
    function Matrix(o) {
        var i, l;
        this.matrix = [];
        switch (false) {
            case !(o == null):
                this.reset();
                break;
            case !(o instanceof Quaternion):
                this.initQuat(o);
                break;
            case !(o instanceof Matrix):
                this.copy(o);
                break;
            case !(o instanceof Array):
                if (o.length === 16) {
                    for (i = l = 0; l < 16; i = ++l) {
                        this.matrix[i] = o[i];
                    }
                }
                break;
            case !(((o != null ? o.x : void 0) != null) && ((o != null ? o.y : void 0) != null) && ((o != null ? o.z : void 0) != null)):
                this.initXYZ(o.x, o.y, o.z);
                break;
            default:
                this.reset();
        }
    }

    Matrix.prototype.initXYZ = function(x, y, z) {
        this.matrix[0] = x.x;
        this.matrix[1] = x.y;
        this.matrix[2] = x.z;
        this.matrix[3] = x.w;
        this.matrix[4] = y.x;
        this.matrix[5] = y.y;
        this.matrix[6] = y.z;
        this.matrix[7] = y.w;
        this.matrix[8] = z.x;
        this.matrix[9] = z.y;
        this.matrix[11] = z.w;
        this.matrix[10] = z.z;
        this.matrix[12] = 0.0;
        this.matrix[13] = 0.0;
        this.matrix[14] = 0.0;
        this.matrix[15] = 1.0;
        return this;
    };

    Matrix.prototype.initQuat = function(o) {
        var wx, wy, wz, x2, xx, xy, xz, y2, yy, yz, z2, zz;
        x2 = o.x + o.x;
        y2 = o.y + o.y;
        z2 = o.z + o.z;
        xx = o.x * x2;
        xy = o.x * y2;
        xz = o.x * z2;
        yy = o.y * y2;
        yz = o.y * z2;
        zz = o.z * z2;
        wx = o.w * x2;
        wy = o.w * y2;
        wz = o.w * z2;
        this.matrix[0] = 1.0 - (yy + zz);
        this.matrix[1] = xy + wz;
        this.matrix[2] = xz - wy;
        this.matrix[3] = 0.0;
        this.matrix[4] = xy - wz;
        this.matrix[5] = 1.0 - (xx + zz);
        this.matrix[6] = yz + wx;
        this.matrix[7] = 0.0;
        this.matrix[8] = xz + wy;
        this.matrix[9] = yz - wx;
        this.matrix[10] = 1.0 - (xx + yy);
        this.matrix[11] = 0.0;
        this.matrix[12] = 0.0;
        this.matrix[13] = 0.0;
        this.matrix[14] = 0.0;
        this.matrix[15] = 1.0;
        return this;
    };

    Matrix.prototype.copy = function(m) {
        var i, l;
        for (i = l = 0; l < 16; i = ++l) {
            this.matrix[i] = m.matrix[i];
        }
        return this;
    };

    Matrix.prototype.mul = function(m) {
        var mm;
        if (m instanceof Matrix) {
            mm = new Matrix;
            mm.matrix[0] = this.matrix[0] * m.matrix[0] + this.matrix[4] * m.matrix[1] + this.matrix[8] * m.matrix[2] + this.matrix[12] * m.matrix[3];
            mm.matrix[1] = this.matrix[1] * m.matrix[0] + this.matrix[5] * m.matrix[1] + this.matrix[9] * m.matrix[2] + this.matrix[13] * m.matrix[3];
            mm.matrix[2] = this.matrix[2] * m.matrix[0] + this.matrix[6] * m.matrix[1] + this.matrix[10] * m.matrix[2] + this.matrix[14] * m.matrix[3];
            mm.matrix[3] = this.matrix[3] * m.matrix[0] + this.matrix[7] * m.matrix[1] + this.matrix[11] * m.matrix[2] + this.matrix[15] * m.matrix[3];
            mm.matrix[4] = this.matrix[0] * m.matrix[4] + this.matrix[4] * m.matrix[5] + this.matrix[8] * m.matrix[6] + this.matrix[12] * m.matrix[7];
            mm.matrix[5] = this.matrix[1] * m.matrix[4] + this.matrix[5] * m.matrix[5] + this.matrix[9] * m.matrix[6] + this.matrix[13] * m.matrix[7];
            mm.matrix[6] = this.matrix[2] * m.matrix[4] + this.matrix[6] * m.matrix[5] + this.matrix[10] * m.matrix[6] + this.matrix[14] * m.matrix[7];
            mm.matrix[7] = this.matrix[3] * m.matrix[4] + this.matrix[7] * m.matrix[5] + this.matrix[11] * m.matrix[6] + this.matrix[15] * m.matrix[7];
            mm.matrix[8] = this.matrix[0] * m.matrix[8] + this.matrix[4] * m.matrix[9] + this.matrix[8] * m.matrix[10] + this.matrix[12] * m.matrix[11];
            mm.matrix[9] = this.matrix[1] * m.matrix[8] + this.matrix[5] * m.matrix[9] + this.matrix[9] * m.matrix[10] + this.matrix[13] * m.matrix[11];
            mm.matrix[11] = this.matrix[3] * m.matrix[8] + this.matrix[7] * m.matrix[9] + this.matrix[11] * m.matrix[10] + this.matrix[15] * m.matrix[11];
            mm.matrix[10] = this.matrix[2] * m.matrix[8] + this.matrix[6] * m.matrix[9] + this.matrix[10] * m.matrix[10] + this.matrix[14] * m.matrix[11];
            mm.matrix[12] = this.matrix[0] * m.matrix[12] + this.matrix[4] * m.matrix[13] + this.matrix[8] * m.matrix[14] + this.matrix[12] * m.matrix[15];
            mm.matrix[13] = this.matrix[1] * m.matrix[12] + this.matrix[5] * m.matrix[13] + this.matrix[9] * m.matrix[14] + this.matrix[13] * m.matrix[15];
            mm.matrix[14] = this.matrix[2] * m.matrix[12] + this.matrix[6] * m.matrix[13] + this.matrix[10] * m.matrix[14] + this.matrix[14] * m.matrix[15];
            mm.matrix[15] = this.matrix[3] * m.matrix[12] + this.matrix[7] * m.matrix[13] + this.matrix[11] * m.matrix[14] + this.matrix[15] * m.matrix[15];
            return mm;
        } else {
            return new Vector(this.matrix[0] * v.x + this.matrix[4] * v.y + this.matrix[8] * v.z + this.matrix[12] * v.w, this.matrix[1] * v.x + this.matrix[5] * v.y + this.matrix[9] * v.z + this.matrix[13] * v.w, this.matrix[2] * v.x + this.matrix[6] * v.y + this.matrix[10] * v.z + this.matrix[14] * v.w, this.matrix[3] * v.x + this.matrix[7] * v.y + this.matrix[11] * v.z + this.matrix[15] * v.w);
        }
    };

    Matrix.prototype.reset = function() {
        this.matrix[0] = this.matrix[5] = this.matrix[10] = this.matrix[15] = 1.0;
        this.matrix[1] = this.matrix[4] = this.matrix[8] = this.matrix[12] = 0.0;
        this.matrix[2] = this.matrix[6] = this.matrix[9] = this.matrix[13] = 0.0;
        return this.matrix[3] = this.matrix[7] = this.matrix[11] = this.matrix[14] = 0.0;
    };

    Matrix.prototype.transform = function(m) {
        return this.copy(this.mul(m));
    };

    Matrix.prototype.translate = function(x, y, z) {
        var v;
        v = new Vector(x, y, z);
        this.matrix[12] += this.matrix[0] * v.x + this.matrix[4] * v.y + this.matrix[8] * v.z;
        this.matrix[13] += this.matrix[1] * v.x + this.matrix[5] * v.y + this.matrix[9] * v.z;
        this.matrix[14] += this.matrix[2] * v.x + this.matrix[6] * v.y + this.matrix[10] * v.z;
        return this.matrix[15] += this.matrix[3] * v.x + this.matrix[7] * v.y + this.matrix[11] * v.z;
    };

    Matrix.rotation = function(x, y, z) {
        return new Matrix().rotate(x, y, z);
    };

    Matrix.prototype.rotate = function(x, y, z) {
        var a0, a1, a10, a11, a2, a3, a4, a5, a6, a7, a8, a9, b0, b1, b10, b2, b4, b5, b6, b8, b9, cx, cy, cz, rx, ry, rz, sx, sy, sz;
        rx = Vector.DEG2RAD(x);
        ry = Vector.DEG2RAD(y);
        rz = Vector.DEG2RAD(z);
        cx = Math.cos(rx);
        sx = Math.sin(rx);
        cy = Math.cos(ry);
        sy = Math.sin(ry);
        cz = Math.cos(rz);
        sz = Math.sin(rz);
        b0 = cy * cz;
        b1 = sx * sy * cz + cx * sz;
        b2 = -cx * sy * cz + sx * sz;
        b4 = -cy * sz;
        b5 = -sx * sy * sz + cx * cz;
        b6 = cx * sy * sz + sx * cz;
        b8 = sy;
        b9 = -sx * cy;
        b10 = cx * cy;
        a0 = this.matrix[0];
        a1 = this.matrix[1];
        a2 = this.matrix[2];
        a3 = this.matrix[3];
        a4 = this.matrix[4];
        a5 = this.matrix[5];
        a6 = this.matrix[6];
        a7 = this.matrix[7];
        a8 = this.matrix[8];
        a9 = this.matrix[9];
        a10 = this.matrix[10];
        a11 = this.matrix[11];
        this.matrix[0] = a0 * b0 + a4 * b1 + a8 * b2;
        this.matrix[1] = a1 * b0 + a5 * b1 + a9 * b2;
        this.matrix[2] = a2 * b0 + a6 * b1 + a10 * b2;
        this.matrix[3] = a3 * b0 + a7 * b1 + a11 * b2;
        this.matrix[4] = a0 * b4 + a4 * b5 + a8 * b6;
        this.matrix[5] = a1 * b4 + a5 * b5 + a9 * b6;
        this.matrix[6] = a2 * b4 + a6 * b5 + a10 * b6;
        this.matrix[7] = a3 * b4 + a7 * b5 + a11 * b6;
        this.matrix[8] = a0 * b8 + a4 * b9 + a8 * b10;
        this.matrix[9] = a1 * b8 + a5 * b9 + a9 * b10;
        this.matrix[10] = a2 * b8 + a6 * b9 + a10 * b10;
        return this.matrix[11] = a3 * b8 + a7 * b9 + a11 * b10;
    };

    Matrix.prototype.scale = function(x, y, z) {
        this.matrix[0] *= x;
        this.matrix[1] *= x;
        this.matrix[2] *= x;
        this.matrix[3] *= x;
        this.matrix[4] *= y;
        this.matrix[5] *= y;
        this.matrix[6] *= y;
        this.matrix[7] *= y;
        this.matrix[8] *= z;
        this.matrix[9] *= z;
        this.matrix[10] *= z;
        return this.matrix[11] *= z;
    };

    Matrix.COFACTOR_4X4_IJ = function(fac, m, i, j) {
        var ii, jj, k, l, n, p, r, ref, ref1, ref2;
        ii = [0, 0, 0, 0];
        jj = [0, 0, 0, 0];
        for (k = l = 0, ref = i; 0 <= ref ? l < ref : l > ref; k = 0 <= ref ? ++l : --l) {
            ii[k] = k;
        }
        for (k = n = ref1 = i; ref1 <= 3 ? n < 3 : n > 3; k = ref1 <= 3 ? ++n : --n) {
            ii[k] = k + 1;
        }
        for (k = p = 0, ref2 = j; 0 <= ref2 ? p < ref2 : p > ref2; k = 0 <= ref2 ? ++p : --p) {
            jj[k] = k;
        }
        for (k = r = 0; r < 3; k = ++r) {
            jj[k] = k + 1;
        }
        fac = m[ii[0]][jj[0]] * (m[ii[1]][jj[1]] * m[ii[2]][jj[2]] - m[ii[1]][jj[2]] * m[ii[2]][jj[1]]);
        fac -= m[ii[0]][jj[1]] * (m[ii[1]][jj[0]] * m[ii[2]][jj[2]] - m[ii[1]][jj[2]] * m[ii[2]][jj[0]]);
        fac += m[ii[0]][jj[2]] * (m[ii[1]][jj[0]] * m[ii[2]][jj[1]] - m[ii[1]][jj[1]] * m[ii[2]][jj[0]]);
        k = i + j;
        if (k !== (k / 2) * 2) {
            fac = -fac;
        }
        return fac;
    };

    Matrix.DETERMINANT_4X4 = function(m) {
        var d;
        d = m[0][0] * this.COFACTOR_4X4_IJ(m, 0, 0);
        d += m[0][1] * this.COFACTOR_4X4_IJ(m, 0, 1);
        d += m[0][2] * this.COFACTOR_4X4_IJ(m, 0, 2);
        d += m[0][3] * this.COFACTOR_4X4_IJ(m, 0, 3);
        return d;
    };

    Matrix.SCALE_ADJOINT_4X4 = function(a, s, m) {
        var i, j, l, results;
        results = [];
        for (i = l = 0; l < 4; i = ++l) {
            results.push((function() {
                var n, results1;
                results1 = [];
                for (j = n = 0; n < 4; j = ++n) {
                    a[j][i] = this.COFACTOR_4X4_IJ(m, i, j);
                    results1.push(a[j][i] *= s);
                }
                return results1;
            }).call(this));
        }
        return results;
    };

    Matrix.INVERT_4X4 = function(b, a) {
        var det;
        det = this.DETERMINANT_4X4(a);
        return this.SCALE_ADJOINT_4X4(b, 1.0 / det, a);
    };

    Matrix.prototype.invert = function() {
        var inv, t;
        t = [[], [], [], []];
        inv = [[], [], [], []];
        t[0][0] = this.matrix[0];
        t[0][1] = this.matrix[1];
        t[0][2] = this.matrix[2];
        t[0][3] = this.matrix[3];
        t[1][0] = this.matrix[4];
        t[1][1] = this.matrix[5];
        t[1][2] = this.matrix[6];
        t[1][3] = this.matrix[7];
        t[2][0] = this.matrix[8];
        t[2][1] = this.matrix[9];
        t[2][2] = this.matrix[10];
        t[2][3] = this.matrix[11];
        t[3][0] = this.matrix[12];
        t[3][1] = this.matrix[13];
        t[3][2] = this.matrix[14];
        t[3][3] = this.matrix[15];
        Matrix.INVERT_4X4(inv, t);
        this.matrix[0] = inv[0][0];
        this.matrix[1] = inv[0][1];
        this.matrix[2] = inv[0][2];
        this.matrix[3] = inv[0][3];
        this.matrix[4] = inv[1][0];
        this.matrix[5] = inv[1][1];
        this.matrix[6] = inv[1][2];
        this.matrix[7] = inv[1][3];
        this.matrix[8] = inv[2][0];
        this.matrix[9] = inv[2][1];
        this.matrix[10] = inv[2][2];
        this.matrix[11] = inv[2][3];
        this.matrix[12] = inv[3][0];
        this.matrix[13] = inv[3][1];
        this.matrix[14] = inv[3][2];
        this.matrix[15] = inv[3][3];
        return this;
    };

    Matrix.prototype.getQuaternion = function() {
        var i, j, k, nxt, q, s, ss, tr;
        tr = this.matrix[0] + this.matrix[5] + this.matrix[10];
        if (tr > 0.0) {
            s = Math.sqrt(tr + 1.0);
            ss = 0.5 / s;
            return new Quaternion(s / 2.0, (this.matrix[6] - this.matrix[9]) * ss, (this.matrix[8] - this.matrix[2]) * ss, (this.matrix[1] - this.matrix[4]) * ss);
        } else {
            i = 0;
            nxt = [1, 2, 0];
            q = [0, 0, 0, 0];
            if (this.matrix[5] > this.matrix[0]) {
                i = 1;
            }
            if (this.matrix[10] > this.matrix[i * 4 + i]) {
                i = 2;
            }
            j = nxt[i];
            k = nxt[j];
            s = Math.sqrt((this.matrix[i * 4 + i] - (this.matrix[j * 4 + j] + this.matrix[k * 4 + k])) + 1.0);
            q[i] = s * 0.5;
            if (s !== 0.0) {
                s = 0.5 / s;
            }
            q[3] = (this.matrix[j * 4 + k] - this.matrix[k * 4 + j]) * s;
            q[j] = (this.matrix[i * 4 + j] + this.matrix[j * 4 + i]) * s;
            q[k] = (this.matrix[i * 4 + k] + this.matrix[k * 4 + i]) * s;
            return new Quaternion(q[3], q[0], q[1], q[2]);
        }
    };

    Matrix.prototype.setPosition = function(x, y, z) {
        var v;
        v = new Vector(x, y, z);
        this.matrix[12] = v.x;
        this.matrix[13] = v.y;
        return this.matrix[14] = v.z;
    };

    Matrix.prototype.setXVector = function(v) {
        this.matrix[0] = v.x;
        this.matrix[1] = v.y;
        return this.matrix[2] = v.z;
    };

    Matrix.prototype.setYVector = function(v) {
        this.matrix[4] = v.x;
        this.matrix[5] = v.y;
        return this.matrix[6] = v.z;
    };

    Matrix.prototype.setZVector = function(v) {
        this.matrix[8] = v.x;
        this.matrix[9] = v.y;
        return this.matrix[10] = v.z;
    };

    Matrix.prototype.getXVector = function() {
        return new Vector(this.matrix[0], this.matrix[1], this.matrix[2]);
    };

    Matrix.prototype.getYVector = function() {
        return new Vector(this.matrix[4], this.matrix[5], this.matrix[6]);
    };

    Matrix.prototype.getZVector = function() {
        return new Vector(this.matrix[8], this.matrix[9], this.matrix[10]);
    };

    Matrix.prototype.getPosition = function() {
        return new Vector(this.matrix[12], this.matrix[13], this.matrix[14]);
    };

    return Matrix;

})();

module.exports = Matrix;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../coffee/lib/matrix.coffee