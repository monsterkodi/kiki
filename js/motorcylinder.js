// koffee 1.4.0
var Action, Face, Geom, Item, Material, MotorCylinder, Pushable, klog,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

klog = require('kxk').klog;

Item = require('./item');

Action = require('./action');

Face = require('./face');

Geom = require('./geom');

Pushable = require('./pushable');

Material = require('./material');

MotorCylinder = (function(superClass) {
    extend(MotorCylinder, superClass);

    MotorCylinder.prototype.isSpaceEgoistic = function() {
        return true;
    };

    function MotorCylinder(face) {
        this.face = face;
        MotorCylinder.__super__.constructor.call(this);
        this.value = 0.0;
        this.active = false;
        this.orientation = Face.orientationForFace(this.face);
        this.addAction(new Action(this, Action.TUCKER, "tucker", 500, Action.REPEAT));
    }

    MotorCylinder.prototype.setPosition = function(pos) {
        MotorCylinder.__super__.setPosition.call(this, pos);
        return this.updateActive();
    };

    MotorCylinder.prototype.createMesh = function() {
        this.mesh = new THREE.Mesh(Geom.cylinder(), Material.plate);
        this.kolben = new THREE.Mesh(Geom.kolben(), Material.gear);
        this.mesh.add(this.kolben);
        this.mesh.receiveShadow = true;
        return this.mesh.castShadow = true;
    };

    MotorCylinder.prototype.updateMesh = function() {
        this.kolben.position.set(0, 0, -0.5 * Math.sin(this.value));
        return this.mesh.quaternion.copy(Face.orientation(this.face));
    };

    MotorCylinder.prototype.setActive = function(active) {
        if (this.active !== active) {
            this.active = active;
            if (this.active) {
                return this.startTimedAction(this.getActionWithId(Action.TUCKER));
            } else {
                return this.stopAction(this.getActionWithId(Action.TUCKER));
            }
        }
    };

    MotorCylinder.prototype.initAction = function(action) {
        var MotorGear, isGear, occupant, pos, ref;
        if ((ref = action.id) === Action.PUSH || ref === Action.FALL) {
            this.setActive(false);
            pos = this.position.minus(Face.normal(this.face));
            occupant = world.getOccupantAtPos(pos);
            MotorGear = require('./motorgear');
            isGear = occupant instanceof MotorGear && occupant.face === this.face;
            klog("initAction isGear " + isGear);
            if (isGear) {
                occupant.setActive(false);
            }
        }
        return MotorCylinder.__super__.initAction.call(this, action);
    };

    MotorCylinder.prototype.performAction = function(action) {
        var relTime;
        if (action.id === Action.TUCKER) {
            relTime = action.getRelativeTime();
            this.value = relTime > 0.5 ? 1.0 - relTime : relTime;
            this.value *= 2;
            this.updateMesh();
            return;
        }
        return MotorCylinder.__super__.performAction.call(this, action);
    };

    MotorCylinder.prototype.finishAction = function(action) {
        var ref;
        if (action.id === Action.TUCKER) {
            world.playSound('MOTOR', this.getPos());
            return;
        }
        MotorCylinder.__super__.finishAction.call(this, action);
        if ((ref = action.id) === Action.PUSH || ref === Action.FALL) {
            return this.updateActive();
        }
    };

    MotorCylinder.prototype.updateActive = function() {
        var MotorGear, isGear, occupant, pos;
        pos = this.position.minus(Face.normal(this.face));
        occupant = world.getOccupantAtPos(pos);
        MotorGear = require('./motorgear');
        isGear = occupant instanceof MotorGear && occupant.face === this.face;
        this.setActive(isGear);
        if (isGear) {
            return occupant.setActive(true);
        }
    };

    return MotorCylinder;

})(Pushable);

module.exports = MotorCylinder;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW90b3JjeWxpbmRlci5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU1BLElBQUEsaUVBQUE7SUFBQTs7O0FBQUUsT0FBUyxPQUFBLENBQVEsS0FBUjs7QUFDWCxJQUFBLEdBQVksT0FBQSxDQUFRLFFBQVI7O0FBQ1osTUFBQSxHQUFZLE9BQUEsQ0FBUSxVQUFSOztBQUNaLElBQUEsR0FBWSxPQUFBLENBQVEsUUFBUjs7QUFDWixJQUFBLEdBQVksT0FBQSxDQUFRLFFBQVI7O0FBQ1osUUFBQSxHQUFZLE9BQUEsQ0FBUSxZQUFSOztBQUNaLFFBQUEsR0FBWSxPQUFBLENBQVEsWUFBUjs7QUFFTjs7OzRCQUVGLGVBQUEsR0FBaUIsU0FBQTtlQUFHO0lBQUg7O0lBRWQsdUJBQUMsSUFBRDtRQUFDLElBQUMsQ0FBQSxPQUFEO1FBQ0EsNkNBQUE7UUFDQSxJQUFDLENBQUEsS0FBRCxHQUFTO1FBQ1QsSUFBQyxDQUFBLE1BQUQsR0FBVTtRQUNWLElBQUMsQ0FBQSxXQUFELEdBQWUsSUFBSSxDQUFDLGtCQUFMLENBQXdCLElBQUMsQ0FBQSxJQUF6QjtRQUNmLElBQUMsQ0FBQSxTQUFELENBQVcsSUFBSSxNQUFKLENBQVcsSUFBWCxFQUFjLE1BQU0sQ0FBQyxNQUFyQixFQUE2QixRQUE3QixFQUF1QyxHQUF2QyxFQUE0QyxNQUFNLENBQUMsTUFBbkQsQ0FBWDtJQUxEOzs0QkFPSCxXQUFBLEdBQWEsU0FBQyxHQUFEO1FBQ1QsK0NBQU0sR0FBTjtlQUNBLElBQUMsQ0FBQSxZQUFELENBQUE7SUFGUzs7NEJBSWIsVUFBQSxHQUFZLFNBQUE7UUFFUixJQUFDLENBQUEsSUFBRCxHQUFVLElBQUksS0FBSyxDQUFDLElBQVYsQ0FBZSxJQUFJLENBQUMsUUFBTCxDQUFBLENBQWYsRUFBZ0MsUUFBUSxDQUFDLEtBQXpDO1FBQ1YsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFJLEtBQUssQ0FBQyxJQUFWLENBQWUsSUFBSSxD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QSxRQUFRLENBQUMsS0FBVixDQUFnQixJQUFJLENBQUMsTUFBTCxDQUFZLElBQUMsQ0FBQSxJQUFiLENBQWhCO1FBQ04sUUFBQSxHQUFXLEtBQUssQ0FBQyxnQkFBTixDQUF1QixHQUF2QjtRQUNYLFNBQUEsR0FBWSxPQUFBLENBQVEsYUFBUjtRQUNaLE1BQUEsR0FBUyxRQUFBLFlBQW9CLFNBQXBCLElBQWtDLFFBQVEsQ0FBQyxJQUFULEtBQWlCLElBQUMsQ0FBQTtRQUU3RCxJQUFDLENBQUEsU0FBRCxDQUFXLE1BQVg7UUFDQSxJQUEyQixNQUEzQjttQkFBQSxRQUFRLENBQUMsU0FBVCxDQUFtQixJQUFuQixFQUFBOztJQVBVOzs7O0dBL0RVOztBQXdFNUIsTUFBTSxDQUFDLE9BQVAsR0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIjIDAwICAgICAwMCAgIDAwMDAwMDAgICAwMDAwMDAwMDAgICAwMDAwMDAwICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAwMDAwMCAgMDAwMDAwMDAgXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgIDAwMCAwMDAgICAwMDAgICAgICAwMDAgIDAwMDAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwXG4jIDAwMDAwMDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAgICAgICAgICAwMDAwMCAgICAwMDAgICAgICAwMDAgIDAwMCAwIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwICAgMDAwMDAwMCAgXG4jIDAwMCAwIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgICAgMDAwICAgICAwMDAgICAgICAwMDAgIDAwMCAgMDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgMDAwXG4jIDAwMCAgIDAwMCAgIDAwMDAwMDAgICAgICAwMDAgICAgICAwMDAwMDAwICAgMDAwICAgMDAwICAgMDAwMDAwMCAgICAgMDAwICAgICAwMDAwMDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAwMDAwMCAgMDAwICAgMDAwXG5cbnsga2xvZyB9ID0gcmVxdWlyZSAna3hrJ1xuSXRlbSAgICAgID0gcmVxdWlyZSAnLi9pdGVtJ1xuQWN0aW9uICAgID0gcmVxdWlyZSAnLi9hY3Rpb24nXG5GYWNlICAgICAgPSByZXF1aXJlICcuL2ZhY2UnXG5HZW9tICAgICAgPSByZXF1aXJlICcuL2dlb20nXG5QdXNoYWJsZSAgPSByZXF1aXJlICcuL3B1c2hhYmxlJ1xuTWF0ZXJpYWwgID0gcmVxdWlyZSAnLi9tYXRlcmlhbCdcblxuY2xhc3MgTW90b3JDeWxpbmRlciBleHRlbmRzIFB1c2hhYmxlICNJdGVtXG4gICAgXG4gICAgaXNTcGFjZUVnb2lzdGljOiAtPiB0cnVlXG4gICAgXG4gICAgQDogKEBmYWNlKSAtPlxuICAgICAgICBzdXBlcigpICAgXG4gICAgICAgIEB2YWx1ZSA9IDAuMFxuICAgICAgICBAYWN0aXZlID0gZmFsc2VcbiAgICAgICAgQG9yaWVudGF0aW9uID0gRmFjZS5vcmllbnRhdGlvbkZvckZhY2UgQGZhY2VcbiAgICAgICAgQGFkZEFjdGlvbiBuZXcgQWN0aW9uIEAsIEFjdGlvbi5UVUNLRVIsIFwidHVja2VyXCIsIDUwMCwgQWN0aW9uLlJFUEVBVFxuICAgIFxuICAgIHNldFBvc2l0aW9uOiAocG9zKSAtPlxuICAgICAgICBzdXBlciBwb3NcbiAgICAgICAgQHVwZGF0ZUFjdGl2ZSgpXG4gICAgICAgIFxuICAgIGNyZWF0ZU1lc2g6IC0+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICBAbWVzaCAgID0gbmV3IFRIUkVFLk1lc2ggR2VvbS5jeWxpbmRlcigpLCBNYXRlcmlhbC5wbGF0ZVxuICAgICAgICBAa29sYmVuID0gbmV3IFRIUkVFLk1lc2ggR2VvbS5rb2xiZW4oKSwgICBNYXRlcmlhbC5nZWFyXG4gICAgICAgIEBtZXNoLmFkZCBAa29sYmVuXG4gICAgICAgIEBtZXNoLnJlY2VpdmVTaGFkb3cgPSB0cnVlXG4gICAgICAgIEBtZXNoLmNhc3RTaGFkb3cgPSB0cnVlXG4gICAgXG4gICAgdXBkYXRlTWVzaDogLT4gXG4gICAgICAgIEBrb2xiZW4ucG9zaXRpb24uc2V0IDAsIDAsIC0wLjUgKiBNYXRoLnNpbiBAdmFsdWUgXG4gICAgICAgIEBtZXNoLnF1YXRlcm5pb24uY29weSBGYWNlLm9yaWVudGF0aW9uIEBmYWNlXG4gICAgICAgICAgICAgICAgXG4gICAgc2V0QWN0aXZlOiAoYWN0aXZlKSAtPlxuICAgICAgICBpZiBAYWN0aXZlICE9IGFjdGl2ZVxuICAgICAgICAgICAgQGFjdGl2ZSA9IGFjdGl2ZVxuICAgICAgICAgICAgaWYgQGFjdGl2ZVxuICAgICAgICAgICAgICAgIEBzdGFydFRpbWVkQWN0aW9uIEBnZXRBY3Rpb25XaXRoSWQgQWN0aW9uLlRVQ0tFUlxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIEBzdG9wQWN0aW9uIEBnZXRBY3Rpb25XaXRoSWQgQWN0aW9uLlRVQ0tFUlxuICAgIFxuICAgIGluaXRBY3Rpb246IChhY3Rpb24pIC0+XG4gICAgICAgIGlmIGFjdGlvbi5pZCBpbiBbQWN0aW9uLlBVU0gsIEFjdGlvbi5GQUxMXVxuICAgICAgICAgICAgQHNldEFjdGl2ZSBmYWxzZVxuICAgICAgICAgICAgcG9zID0gQHBvc2l0aW9uLm1pbnVzIEZhY2Uubm9ybWFsIEBmYWNlXG4gICAgICAgICAgICBvY2N1cGFudCA9IHdvcmxkLmdldE9jY3VwYW50QXRQb3MgcG9zIFxuICAgICAgICAgICAgTW90b3JHZWFyID0gcmVxdWlyZSAnLi9tb3RvcmdlYXInXG4gICAgICAgICAgICBpc0dlYXIgPSBvY2N1cGFudCBpbnN0YW5jZW9mIE1vdG9yR2VhciBhbmQgb2NjdXBhbnQuZmFjZSA9PSBAZmFjZVxuICAgICAgICAgICAga2xvZyBcImluaXRBY3Rpb24gaXNHZWFyICN7aXNHZWFyfVwiXG4gICAgICAgICAgICBvY2N1cGFudC5zZXRBY3RpdmUgZmFsc2UgaWYgaXNHZWFyXG4gICAgICAgIHN1cGVyIGFjdGlvblxuICAgICAgICBcbiAgICBwZXJmb3JtQWN0aW9uOiAoYWN0aW9uKSAtPlxuICAgICAgICBpZiBhY3Rpb24uaWQgPT0gQWN0aW9uLlRVQ0tFUlxuICAgICAgICAgICAgcmVsVGltZSA9IGFjdGlvbi5nZXRSZWxhdGl2ZVRpbWUoKVxuICAgICAgICAgICAgQHZhbHVlID0gaWYgcmVsVGltZSA+IDAuNSB0aGVuIDEuMCAtIHJlbFRpbWUgZWxzZSByZWxUaW1lXG4gICAgICAgICAgICBAdmFsdWUgKj0gMlxuICAgICAgICAgICAgQHVwZGF0ZU1lc2goKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIHN1cGVyIGFjdGlvblxuICAgIFxuICAgIGZpbmlzaEFjdGlvbjogKGFjdGlvbikgLT5cbiAgICAgICAgaWYgYWN0aW9uLmlkID09IEFjdGlvbi5UVUNLRVJcbiAgICAgICAgICAgIHdvcmxkLnBsYXlTb3VuZCAnTU9UT1InIEBnZXRQb3MoKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIHN1cGVyIGFjdGlvblxuICAgICAgICBpZiBhY3Rpb24uaWQgaW4gW0FjdGlvbi5QVVNILCBBY3Rpb24uRkFMTF1cbiAgICAgICAgICAgIEB1cGRhdGVBY3RpdmUoKVxuICAgIFxuICAgIHVwZGF0ZUFjdGl2ZTogLT5cbiAgICAgICAgcG9zID0gQHBvc2l0aW9uLm1pbnVzIEZhY2Uubm9ybWFsIEBmYWNlXG4gICAgICAgIG9jY3VwYW50ID0gd29ybGQuZ2V0T2NjdXBhbnRBdFBvcyBwb3MgXG4gICAgICAgIE1vdG9yR2VhciA9IHJlcXVpcmUgJy4vbW90b3JnZWFyJ1xuICAgICAgICBpc0dlYXIgPSBvY2N1cGFudCBpbnN0YW5jZW9mIE1vdG9yR2VhciBhbmQgb2NjdXBhbnQuZmFjZSA9PSBAZmFjZVxuICAgICAgICAjIGtsb2cgXCJpc0dlYXIgI3tpc0dlYXJ9XCJcbiAgICAgICAgQHNldEFjdGl2ZSBpc0dlYXJcbiAgICAgICAgb2NjdXBhbnQuc2V0QWN0aXZlIHRydWUgaWYgaXNHZWFyXG4gICAgICAgIFxubW9kdWxlLmV4cG9ydHMgPSBNb3RvckN5bGluZGVyXG4iXX0=
//# sourceURL=../coffee/motorcylinder.coffee