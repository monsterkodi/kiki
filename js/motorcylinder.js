// koffee 1.4.0
var Action, Face, Geom, Item, Material, MotorCylinder, Pushable,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

Item = require('./item');

Action = require('./action');

Face = require('./face');

Geom = require('./geom');

Pushable = require('./pushable');

Material = require('./material');

MotorCylinder = (function(superClass) {
    extend(MotorCylinder, superClass);

    MotorCylinder.prototype.isSpaceEgoistic = function() {
        return true;
    };

    function MotorCylinder(face) {
        this.face = face;
        MotorCylinder.__super__.constructor.call(this);
        this.value = 0.0;
        this.active = false;
        this.orientation = Face.orientationForFace(this.face);
        this.addAction(new Action(this, Action.TUCKER, "tucker", 500, Action.REPEAT));
    }

    MotorCylinder.prototype.setPosition = function(pos) {
        MotorCylinder.__super__.setPosition.call(this, pos);
        return this.updateActive();
    };

    MotorCylinder.prototype.createMesh = function() {
        this.mesh = new THREE.Mesh(Geom.cylinder(), Material.plate);
        this.kolben = new THREE.Mesh(Geom.kolben(), Material.gear);
        this.mesh.add(this.kolben);
        this.mesh.receiveShadow = true;
        return this.mesh.castShadow = true;
    };

    MotorCylinder.prototype.updateMesh = function() {
        this.kolben.position.set(0, 0, -0.5 * Math.sin(this.value));
        return this.mesh.quaternion.copy(Face.orientation(this.face));
    };

    MotorCylinder.prototype.setActive = function(active) {
        if (this.active !== active) {
            this.active = active;
            if (this.active) {
                return this.startTimedAction(this.getActionWithId(Action.TUCKER));
            } else {
                return this.stopAction(this.getActionWithId(Action.TUCKER));
            }
        }
    };

    MotorCylinder.prototype.initAction = function(action) {
        var MotorGear, isGear, occupant, pos, ref;
        if ((ref = action.id) === Action.PUSH || ref === Action.FALL) {
            this.setActive(false);
            pos = this.position.minus(Face.normal(this.face));
            occupant = world.getOccupantAtPos(pos);
            MotorGear = require('./motorgear');
            isGear = occupant instanceof MotorGear && occupant.face === this.face;
            console.log("initAction isGear " + isGear);
            if (isGear) {
                occupant.setActive(false);
            }
        }
        return MotorCylinder.__super__.initAction.call(this, action);
    };

    MotorCylinder.prototype.performAction = function(action) {
        var relTime;
        if (action.id === Action.TUCKER) {
            relTime = action.getRelativeTime();
            this.value = relTime > 0.5 ? 1.0 - relTime : relTime;
            this.value *= 2;
            this.updateMesh();
            return;
        }
        return MotorCylinder.__super__.performAction.call(this, action);
    };

    MotorCylinder.prototype.finishAction = function(action) {
        var ref;
        if (action.id === Action.TUCKER) {
            world.playSound('MOTOR', this.getPos());
            return;
        }
        MotorCylinder.__super__.finishAction.call(this, action);
        if ((ref = action.id) === Action.PUSH || ref === Action.FALL) {
            return this.updateActive();
        }
    };

    MotorCylinder.prototype.updateActive = function() {
        var MotorGear, isGear, occupant, pos;
        pos = this.position.minus(Face.normal(this.face));
        occupant = world.getOccupantAtPos(pos);
        MotorGear = require('./motorgear');
        isGear = occupant instanceof MotorGear && occupant.face === this.face;
        this.setActive(isGear);
        if (isGear) {
            return occupant.setActive(true);
        }
    };

    return MotorCylinder;

})(Pushable);

module.exports = MotorCylinder;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/motorcylinder.coffee