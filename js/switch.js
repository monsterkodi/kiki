// koffee 1.4.0
var Action, Item, Light, Material, Quaternion, Switch, Vector,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

Quaternion = require('./lib/quaternion');

Vector = require('./lib/vector');

Action = require('./action');

Light = require('./light');

Item = require('./item');

Material = require('./material');

Switch = (function(superClass) {
    extend(Switch, superClass);

    Switch.prototype.isSpaceEgoistic = function() {
        return false;
    };

    function Switch(active) {
        if (active == null) {
            active = false;
        }
        Switch.__super__.constructor.apply(this, arguments);
        this.angle = 0;
        this.light = null;
        this.active = null;
        this.sound_on = 'SWITCH_ON';
        this.sound_off = 'SWITCH_OFF';
        this.SWITCH_OFF_EVENT = this.addEventWithName("off");
        this.SWITCH_ON_EVENT = this.addEventWithName("on");
        this.SWITCHED_EVENT = this.addEventWithName("switched");
        this.addAction(new Action(this, Action.TOGGLE, "toggle", 0));
        this.addAction(new Action(this, Action.ROTATE, "rotation", 2000, Action.CONTINUOUS));
        this.setActive(active);
    }

    Switch.prototype.del = function() {
        var ref;
        this.mesh.geometry.dispose();
        this.tors.geometry.dispose();
        if ((ref = this.light) != null) {
            ref.del();
        }
        return Switch.__super__.del.apply(this, arguments);
    };

    Switch.prototype.createMesh = function() {
        var t1, t2, torusRadius;
        torusRadius = 0.05;
        t1 = new THREE.TorusBufferGeometry(0.5 - torusRadius, torusRadius, 16, 32);
        this.mesh = new THREE.Mesh(t1, Material["switch"]);
        this.mesh.castShadow = true;
        this.mesh.receiveShadow = true;
        t2 = new THREE.TorusBufferGeometry(0.5 - torusRadius, torusRadius, 16, 32);
        t2.rotateY(Vector.DEG2RAD(90));
        this.tors = new THREE.Mesh(t2, Material["switch"]);
        this.tors.castShadow = true;
        this.tors.receiveShadow = true;
        this.mesh.add(this.tors);
        return this.mesh;
    };

    Switch.prototype.bulletImpact = function() {
        return this.setActive(!this.active);
    };

    Switch.prototype.lightDeleted = function() {
        return this.light = null;
    };

    Switch.prototype.createLight = function() {
        if (this.light) {
            return;
        }
        return this.light = new Light({
            pos: this.position,
            radius: 6.0
        });
    };

    Switch.prototype.toggle = function() {
        return this.setActive(!this.active);
    };

    Switch.prototype.setActive = function(status) {
        if (this.active !== status) {
            this.active = status;
            if (this.active) {
                this.startTimedAction(this.getActionWithId(Action.ROTATE));
                world.playSound(this.sound_on);
                this.events[this.SWITCH_ON_EVENT].triggerActions();
                this.createLight();
                this.light.on('deleted', this.lightDeleted);
            } else {
                this.stopAction(this.getActionWithId(Action.ROTATE));
                world.playSound(this.sound_off);
                this.events[this.SWITCH_OFF_EVENT].triggerActions();
                if (this.light) {
                    this.light.del();
                    this.light = null;
                }
            }
            return this.events[this.SWITCHED_EVENT].triggerActions();
        }
    };

    Switch.prototype.setPosition = function(pos) {
        var ref;
        Switch.__super__.setPosition.call(this, pos);
        return (ref = this.light) != null ? ref.setPosition(this.position) : void 0;
    };

    Switch.prototype.animate = function(f) {
        this.angle += f * 360;
        this.mesh.quaternion.copy(Quaternion.rotationAroundVector(this.angle, Vector.unitY));
        return this.tors.quaternion.copy(Quaternion.rotationAroundVector(this.angle / 2, Vector.unitZ));
    };

    Switch.prototype.performAction = function(action) {
        if (action.id === Action.TOGGLE) {
            return this.toggle();
        } else {
            return this.animate(action.getRelativeDelta());
        }
    };

    return Switch;

})(Item);

module.exports = Switch;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/switch.coffee