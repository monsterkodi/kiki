// koffee 1.4.0
var $, FPS, clamp, first, last, log, now, ref,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('../tools/tools'), clamp = ref.clamp, first = ref.first, last = ref.last, $ = ref.$;

log = require('../tools/log');

now = require('performance-now');

FPS = (function() {
    function FPS() {
        this.draw = bind(this.draw, this);
        var t, x, y;
        this.elem = document.createElement('div');
        this.elem.className = 'fps';
        this.elem.style.display = 'none';
        this.canvas = document.createElement('canvas');
        this.canvas.className = "fpsCanvas";
        this.canvas.height = 30 * 2;
        this.canvas.width = 130 * 2;
        this.elem.appendChild(this.canvas);
        y = parseInt(-30 / 2);
        x = parseInt(-130 / 2);
        t = "translate3d(" + x + "px, " + y + "px, 0px) scale3d(0.5, 0.5, 1)";
        this.canvas.style.transform = t;
        this.history = [];
        this.last = now();
        $('.commandline-span').appendChild(this.elem);
        window.requestAnimationFrame(this.draw);
    }

    FPS.prototype.draw = function() {
        var ctx, green, h, i, j, ms, red, ref1, time;
        time = now();
        this.history.push(time - this.last);
        while (this.history.length > 260) {
            this.history.shift();
        }
        this.canvas.height = this.canvas.height;
        ctx = this.canvas.getContext('2d');
        for (i = j = 0, ref1 = this.history.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
            ms = Math.max(0, this.history[i] - 17);
            red = parseInt(32 + (255 - 32) * clamp(0, 1, (ms - 16) / 16));
            green = parseInt(32 + (255 - 32) * clamp(0, 1, (ms - 32) / 32));
            ctx.fillStyle = "rgb(" + red + ", " + green + ", 32)";
            h = Math.min(ms, 60);
            ctx.fillRect(260 - this.history.length + i, 60 - h, 2, h);
        }
        this.last = time;
        return window.requestAnimationFrame(this.draw);
    };

    FPS.prototype.toggle = function() {
        this.elem.style.display = this.elem.style.display === 'none' && 'unset' || 'none';
        this.history.push(49);
        return window.setState('fps', this.elem.style.display !== 'none');
    };

    return FPS;

})();

module.exports = FPS;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnBzLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBTUEsSUFBQSx5Q0FBQTtJQUFBOztBQUFBLE1BSU0sT0FBQSxDQUFRLGdCQUFSLENBSk4sRUFDQSxpQkFEQSxFQUVBLGlCQUZBLEVBR0EsZUFIQSxFQUlBOztBQUNBLEdBQUEsR0FBTSxPQUFBLENBQVEsY0FBUjs7QUFDTixHQUFBLEdBQU0sT0FBQSxDQUFRLGlCQUFSOztBQUVBO0lBRVcsYUFBQTs7QUFFVCxZQUFBO1FBQUEsSUFBQyxDQUFBLElBQUQsR0FBUSxRQUFRLENBQUMsYUFBVCxDQUF1QixLQUF2QjtRQUNSLElBQUMsQ0FBQSxJQUFJLENBQUMsU0FBTixHQUFrQjtRQUNsQixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFaLEdBQXNCO1FBRXRCLElBQUMsQ0FBQSxNQUFELEdBQVUsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsUUFBdkI7UUFDVixJQUFDLENBQUEsTUFBTSxDQUFDLFNBQVIsR0FBb0I7UUFDcEIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLEdBQWlCLEVBQUEsR0FBRztRQUNwQixJQUFDLENBQUEsTUFBTSxDQUFDLEtBQVIsR0FBZ0IsR0FBQSxHQUFJO1FBQ3BCLElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixDQUFrQixJQUFDLENBQUEsTUFBbkI7UUFFQSxDQUFBLEdBQUksUUFBQSxDQUFVLENBQUMsRUFBRCxHQUFJLENBQWQ7UUFDSixDQUFBLEdBQUksUUFBQSxDQUFTLENBQUMsR0FBRCxHQUFLLENBQWQ7UUFDSixDQUFBLEdBQUksY0FBQSxHQUFlLENBQWYsR0FBaUIsTUFBakIsR0FBdUIsQ0FBdkIsR0FBeUI7UUFDN0IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBZCxHQUEwQjtRQUUxQixJQUFDLENBQUEsT0FBRCxHQUFXO1FBQ1gsSUFBQyxDQUFBLElBQUQsR0FBUSxHQUFBLENBQUE7UUFFUixDQUFBLENBQUUsbUJBQUYsQ0FBc0IsQ0FBQyxXQUF2QixDQUFtQyxJQUFDLENBQUEsSUFBcEM7UUFDQSxNQUFNLENBQUMscUJBQVAsQ0FBNkIsSUFBQyxDQUFBLElBQTlCO0lBckJTOztrQkE2QmIsSUFBQSxHQUFNLFNBQUE7QUFDRixZQUFBO1FBQUEsSUFBQSxHQUFPLEdBQUEsQ0FBQTtRQUNQLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFjLElBQUEsR0FBSyxJQUFDLENBQUEsSUFBcEI7QUFDaUIsZUFBTSxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsR0FBa0IsR0FBeEI7WUFBakIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxLQUFULENBQUE7UUFBaUI7UUFDakIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLEdBQWlCLElBQUMsQ0FBQSxNQUFNLENBQUM7UUFDekIsR0FBQSxHQUFNLElBQUMsQ0FBQSxNQUFNLENBQUMsVUFBUixDQUFtQixJQUFuQjtBQUNOLGFBQVMsaUdBQVQ7WUFDSSxFQUFBLEdBQUssSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksSUFBQyxDQUFBLE9BQVEsQ0FBQSxDQUFBLENBQVQsR0FBWSxFQUF4QjtZQUNMLEdBQUEsR0FBTSxRQUFBLENBQVMsRUFBQSxHQUFLLENBQUMsR0FBQSxHQUFJLEVBQUwsQ0FBQSxHQUFTLEtBQUEsQ0FBTSxDQUFOLEVBQVEsQ0FBUixFQUFXLENBQUMsRUFBQSxHQUFHLEVBQUosQ0FBQSxHQUFRLEVBQW5CLENBQXZCO1lBQ04sS0FBQSxHQUFRLFFBQUEsQ0FBUyxFQUFBLEdBQUssQ0FBQyxHQUFBLEdBQUksRUFBTCxDQUFBLEdBQVMsS0FBQSxDQUFNLENBQU4sRUFBUSxDQUFSLEVBQVcsQ0FBQyxFQUFBLEdBQUcsRUFBSixDQUFBLEdBQVEsRUFBbkIsQ0FBdkI7WUFDUixHQUFHLENBQUMsU0FBSixHQUFnQixNQUFBLEdBQU8sR0FBUCxHQUFXLElBQVgsR0FBZSxLQUFmLEdBQXFCO1lBQ3JDLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQVQsRUFBYSxFQUFiO1lBQ0osR0FBRyxDQUFDLFFBQUosQ0FBYSxHQUFBLEdBQUksSUFBQyxDQUFBLE9BQU8sQ0FBQyxNQUFiLEdBQW9CLENBQWpDLEVBQW9DLEVBQUEsR0FBRyxDQUF2QyxFQUEwQyxDQUExQyxFQUE2QyxDQUE3QztBQU5KO1FBT0EsSUFBQyxDQUFBLElBQUQsR0FBUTtlQUNSLE1BQU0sQ0FBQyxxQkFBUCxDQUE2QixJQUFDLENBQUEsSUFBOUI7SUFkRTs7a0JBZ0JOLE1BQUEsR0FBUSxTQUFBO1FBQ0osSUFBQyxDQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBWixHQUFzQixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFaLEtBQXVCLE1BQXZCLElBQWtDLE9BQWxDLElBQTZDO1FBQ25FLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFjLEVBQWQ7ZUFDQSxNQUFNLENBQUMsUUFBUCxDQUFnQixLQUFoQixFQUF1QixJQUFDLENBQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFaLEtBQXVCLE1BQTlDO0lBSEk7Ozs7OztBQUtaLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiXG4jICAgMDAwMDAwMDAgIDAwMDAwMDAwICAgIDAwMDAwMDBcbiMgICAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAgIFxuIyAgIDAwMDAwMCAgICAwMDAwMDAwMCAgIDAwMDAwMDAgXG4jICAgMDAwICAgICAgIDAwMCAgICAgICAgICAgICAwMDBcbiMgICAwMDAgICAgICAgMDAwICAgICAgICAwMDAwMDAwIFxue1xuY2xhbXAsXG5maXJzdCxcbmxhc3QsXG4kfSAgPSByZXF1aXJlICcuLi90b29scy90b29scydcbmxvZyA9IHJlcXVpcmUgJy4uL3Rvb2xzL2xvZydcbm5vdyA9IHJlcXVpcmUgJ3BlcmZvcm1hbmNlLW5vdydcblxuY2xhc3MgRlBTXG5cbiAgICBjb25zdHJ1Y3RvcjogKCkgLT5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgIEBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAnZGl2J1xuICAgICAgICBAZWxlbS5jbGFzc05hbWUgPSAnZnBzJ1xuICAgICAgICBAZWxlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG5cbiAgICAgICAgQGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgJ2NhbnZhcydcbiAgICAgICAgQGNhbnZhcy5jbGFzc05hbWUgPSBcImZwc0NhbnZhc1wiXG4gICAgICAgIEBjYW52YXMuaGVpZ2h0ID0gMzAqMlxuICAgICAgICBAY2FudmFzLndpZHRoID0gMTMwKjJcbiAgICAgICAgQGVsZW0uYXBwZW5kQ2hpbGQgQGNhbnZhc1xuXG4gICAgICAgIHkgPSBwYXJzZUludCAgLTMwLzJcbiAgICAgICAgeCA9IHBhcnNlSW50IC0xMzAvMlxuICAgICAgICB0ID0gXCJ0cmFuc2xhdGUzZCgje3h9cHgsICN7eX1weCwgMHB4KSBzY2FsZTNkKDAuNSwgMC41LCAxKVwiXG4gICAgICAgIEBjYW52YXMuc3R5bGUudHJhbnNmb3JtID0gdFxuICAgICAgICBcbiAgICAgICAgQGhpc3RvcnkgPSBbXVxuICAgICAgICBAbGFzdCA9IG5vdygpXG4gICAgICAgICAgICBcbiAgICAgICAgJCgnLmNvbW1hbmRsaW5lLXNwYW4nKS5hcHBlbmRDaGlsZCBAZWxlbVxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIEBkcmF3XG4gICAgICAgICAgICBcbiAgICAjIDAwMDAwMDAgICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMCAgIDAwMFxuICAgICMgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwIDAgMDAwXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAgICAgMDAwMDAwMDAwICAwMDAwMDAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMFxuICAgICMgMDAwMDAwMCAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAgICAgIDAwXG4gICAgICAgICAgICAgICAgXG4gICAgZHJhdzogPT5cbiAgICAgICAgdGltZSA9IG5vdygpXG4gICAgICAgIEBoaXN0b3J5LnB1c2ggdGltZS1AbGFzdFxuICAgICAgICBAaGlzdG9yeS5zaGlmdCgpIHdoaWxlIEBoaXN0b3J5Lmxlbmd0aCA+IDI2MFxuICAgICAgICBAY2FudmFzLmhlaWdodCA9IEBjYW52YXMuaGVpZ2h0XG4gICAgICAgIGN0eCA9IEBjYW52YXMuZ2V0Q29udGV4dCAnMmQnICAgICAgICBcbiAgICAgICAgZm9yIGkgaW4gWzAuLi5AaGlzdG9yeS5sZW5ndGhdICBcbiAgICAgICAgICAgIG1zID0gTWF0aC5tYXggMCwgQGhpc3RvcnlbaV0tMTdcbiAgICAgICAgICAgIHJlZCA9IHBhcnNlSW50IDMyICsgKDI1NS0zMikqY2xhbXAgMCwxLCAobXMtMTYpLzE2XG4gICAgICAgICAgICBncmVlbiA9IHBhcnNlSW50IDMyICsgKDI1NS0zMikqY2xhbXAgMCwxLCAobXMtMzIpLzMyXG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2IoI3tyZWR9LCAje2dyZWVufSwgMzIpXCJcbiAgICAgICAgICAgIGggPSBNYXRoLm1pbiBtcywgNjBcbiAgICAgICAgICAgIGN0eC5maWxsUmVjdCAyNjAtQGhpc3RvcnkubGVuZ3RoK2ksIDYwLWgsIDIsIGhcbiAgICAgICAgQGxhc3QgPSB0aW1lXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgQGRyYXdcblxuICAgIHRvZ2dsZTogLT4gXG4gICAgICAgIEBlbGVtLnN0eWxlLmRpc3BsYXkgPSBAZWxlbS5zdHlsZS5kaXNwbGF5ID09ICdub25lJyBhbmQgJ3Vuc2V0JyBvciAnbm9uZScgICAgICAgXG4gICAgICAgIEBoaXN0b3J5LnB1c2ggNDlcbiAgICAgICAgd2luZG93LnNldFN0YXRlICdmcHMnLCBAZWxlbS5zdHlsZS5kaXNwbGF5ICE9ICdub25lJyBcblxubW9kdWxlLmV4cG9ydHMgPSBGUFNcblxuIl19
//# sourceURL=../../coffee/tools/fps.coffee