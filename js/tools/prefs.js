// koffee 1.4.0
var Prefs, _, fs, log, noon;

_ = require('lodash');

noon = require('noon');

log = require('./log');

fs = require('fs');

Prefs = (function() {
    function Prefs() {}

    Prefs.timeout = 2000;

    Prefs.init = function(path, defs) {
        if (defs == null) {
            defs = {};
        }
        if (typeof window !== "undefined" && window !== null) {
            return this.ipc = require('electron').ipcRenderer;
        } else {
            this.path = path;
            this.timer = null;
            nconf.use('user', {
                type: 'file',
                format: {
                    parse: noon.parse,
                    stringify: function(o, n, i) {
                        return noon.stringify(o, {
                            indent: i,
                            maxalign: 8
                        });
                    }
                },
                file: path
            });
            return nconf.defaults(defs);
        }
    };

    Prefs.get = function(key, value) {
        var ref;
        if (this.ipc != null) {
            return this.ipc.sendSync('prefGet', key, value);
        } else {
            return (ref = nconf.get(key)) != null ? ref : value;
        }
    };

    Prefs.set = function(key, value) {
        if (this.ipc != null) {
            return this.ipc.send('prefSet', key, value);
        } else {
            if (this.timer) {
                clearTimeout(this.timer);
            }
            this.timer = setTimeout(this.save, this.timeout);
            if (value != null) {
                return nconf.set(key, value);
            } else {
                return nconf.clear(key);
            }
        }
    };

    Prefs.del = function(key, value) {
        return this.set(key);
    };

    Prefs.save = function(cb) {
        if (Prefs.timer) {
            clearTimeout(Prefs.timer);
        }
        Prefs.timer = null;
        return nconf.save(function(err) {
            if (err != null) {
                console.log("nconf save error:", err);
            }
            return typeof cb === "function" ? cb(err == null) : void 0;
        });
    };

    return Prefs;

})();

module.exports = Prefs;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlZnMuanMiLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFNQSxJQUFBOztBQUFBLENBQUEsR0FBUSxPQUFBLENBQVEsUUFBUjs7QUFDUixJQUFBLEdBQVEsT0FBQSxDQUFRLE1BQVI7O0FBQ1IsR0FBQSxHQUFRLE9BQUEsQ0FBUSxPQUFSOztBQUNSLEVBQUEsR0FBUSxPQUFBLENBQVEsSUFBUjs7QUFFRjs7O0lBRUYsS0FBQyxDQUFBLE9BQUQsR0FBVzs7SUFRWCxLQUFDLENBQUEsSUFBRCxHQUFPLFNBQUMsSUFBRCxFQUFPLElBQVA7O1lBQU8sT0FBSzs7UUFFZixJQUFHLGdEQUFIO21CQUNJLElBQUMsQ0FBQSxHQUFELEdBQU8sT0FBQSxDQUFRLFVBQVIsQ0FBbUIsQ0FBQyxZQUQvQjtTQUFBLE1BQUE7WUFHSSxJQUFDLENBQUEsSUFBRCxHQUFRO1lBQ1IsSUFBQyxDQUFBLEtBQUQsR0FBUztZQUNULEtBQUssQ0FBQyxHQUFOLENBQVUsTUFBVixFQUNJO2dCQUFBLElBQUEsRUFBTSxNQUFOO2dCQUNBLE1BQUEsRUFDSTtvQkFBQSxLQUFBLEVBQU8sSUFBSSxDQUFDLEtBQVo7b0JBQ0EsU0FBQSxFQUFXLFNBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMOytCQUFXLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZixFQUFrQjs0QkFBQyxNQUFBLEVBQVEsQ0FBVDs0QkFBWSxRQUFBLEVBQVUsQ0FBdEI7eUJBQWxCO29CQUFYLENBRFg7aUJBRko7Z0JBSUEsSUFBQSxFQUFNLElBSk47YUFESjttQkFNQSxLQUFLLENBQUMsUUFBTixDQUFlLElBQWYsRUFYSjs7SUFGRzs7SUFxQlAsS0FBQyxDQUFBLEdBQUQsR0FBTSxTQUFDLEdBQUQsRUFBTSxLQUFOO0FBQ0YsWUFBQTtRQUFBLElBQUcsZ0JBQUg7bUJBQ0ksSUFBQyxDQUFBLEdBQUcsQ0FBQyxRQUFMLENBQWMsU0FBZCxFQUF5QixHQUF6QixFQUE4QixLQUE5QixFQURKO1NBQUEsTUFBQTswREFHcUIsTUFIckI7O0lBREU7O0lBTU4sS0FBQyxDQUFBLEdBQUQsR0FBTSxTQUFDLEdBQUQsRUFBTSxLQUFOO1FBQ0YsSUFBRyxnQkFBSDttQkFDSSxJQUFDLENBQUEsR0FBRyxDQUFDLElBQUwsQ0FBVSxTQUFWLEVBQXFCLEdBQXJCLEVBQTBCLEtBQTFCLEVBREo7U0FBQSxNQUFBO1lBR0ksSUFBdUIsSUFBQyxDQUFBLEtBQXhCO2dCQUFBLFlBQUEsQ0FBYSxJQUFDLENBQUEsS0FBZCxFQUFBOztZQUNBLElBQUMsQ0FBQSxLQUFELEdBQVMsVUFBQSxDQUFXLElBQUMsQ0FBQSxJQUFaLEVBQWtCLElBQUMsQ0FBQSxPQUFuQjtZQUVULElBQUcsYUFBSDt1QkFDSSxLQUFLLENBQUMsR0FBTixDQUFVLEdBQVYsRUFBZSxLQUFmLEVBREo7YUFBQSxNQUFBO3VCQUdJLEtBQUssQ0FBQyxLQUFOLENBQVksR0FBWixFQUhKO2FBTko7O0lBREU7O0lBWU4sS0FBQyxDQUFBLEdBQUQsR0FBTSxTQUFDLEdBQUQsRUFBTSxLQUFOO2VBQWdCLElBQUMsQ0FBQSxHQUFELENBQUssR0FBTDtJQUFoQjs7SUFRTixLQUFDLENBQUEsSUFBRCxHQUFPLFNBQUMsRUFBRDtRQUNILElBQXVCLEtBQUMsQ0FBQSxLQUF4QjtZQUFBLFlBQUEsQ0FBYSxLQUFDLENBQUEsS0FBZCxFQUFBOztRQUNBLEtBQUMsQ0FBQSxLQUFELEdBQVM7ZUFDVCxLQUFLLENBQUMsSUFBTixDQUFXLFNBQUMsR0FBRDtZQUNSLElBQWlDLFdBQWpDO2dCQUFBLE9BQUEsQ0FBQyxHQUFELENBQUssbUJBQUwsRUFBMEIsR0FBMUIsRUFBQTs7OENBQ0MsR0FBSztRQUZFLENBQVg7SUFIRzs7Ozs7O0FBT1gsTUFBTSxDQUFDLE9BQVAsR0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIjIDAwMDAwMDAwICAgMDAwMDAwMDAgICAwMDAwMDAwMCAgMDAwMDAwMDAgICAwMDAwMDAwXG4jIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgICAgIDAwMCAgICAgXG4jIDAwMDAwMDAwICAgMDAwMDAwMCAgICAwMDAwMDAwICAgMDAwMDAwICAgIDAwMDAwMDAgXG4jIDAwMCAgICAgICAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgICAgICAgICAgMDAwXG4jIDAwMCAgICAgICAgMDAwICAgMDAwICAwMDAwMDAwMCAgMDAwICAgICAgIDAwMDAwMDAgXG5cbl8gICAgID0gcmVxdWlyZSAnbG9kYXNoJ1xubm9vbiAgPSByZXF1aXJlICdub29uJ1xubG9nICAgPSByZXF1aXJlICcuL2xvZydcbmZzICAgID0gcmVxdWlyZSAnZnMnXG5cbmNsYXNzIFByZWZzXG4gICAgXG4gICAgQHRpbWVvdXQgPSAyMDAwXG5cbiAgICAjIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMDAwMDAwMFxuICAgICMgMDAwICAwMDAwICAwMDAgIDAwMCAgICAgMDAwICAgXG4gICAgIyAwMDAgIDAwMCAwIDAwMCAgMDAwICAgICAwMDAgICBcbiAgICAjIDAwMCAgMDAwICAwMDAwICAwMDAgICAgIDAwMCAgIFxuICAgICMgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgMDAwICAgXG5cbiAgICBAaW5pdDogKHBhdGgsIGRlZnM9e30pIC0+XG4gICAgICAgIFxuICAgICAgICBpZiB3aW5kb3c/XG4gICAgICAgICAgICBAaXBjID0gcmVxdWlyZSgnZWxlY3Ryb24nKS5pcGNSZW5kZXJlclxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAcGF0aCA9IHBhdGhcbiAgICAgICAgICAgIEB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIG5jb25mLnVzZSAndXNlcicsXG4gICAgICAgICAgICAgICAgdHlwZTogJ2ZpbGUnXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBcbiAgICAgICAgICAgICAgICAgICAgcGFyc2U6IG5vb24ucGFyc2VcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5naWZ5OiAobyxuLGkpIC0+IG5vb24uc3RyaW5naWZ5IG8sIHtpbmRlbnQ6IGksIG1heGFsaWduOiA4fVxuICAgICAgICAgICAgICAgIGZpbGU6IHBhdGhcbiAgICAgICAgICAgIG5jb25mLmRlZmF1bHRzIGRlZnNcbiAgICBcbiAgICAjICAwMDAwMDAwICAgMDAwMDAwMDAgIDAwMDAwMDAwMCAgICAgICAgICAwMDAwMDAwICAwMDAwMDAwMCAgMDAwMDAwMDAwXG4gICAgIyAwMDAgICAgICAgIDAwMCAgICAgICAgICAwMDAgICAgICAwMDAgICAwMDAgICAgICAgMDAwICAgICAgICAgIDAwMCAgIFxuICAgICMgMDAwICAwMDAwICAwMDAwMDAwICAgICAgMDAwICAgIDAwMDAwMDAgMDAwMDAwMCAgIDAwMDAwMDAgICAgICAwMDAgICBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgIDAwMCAgICAgICAgMDAwICAwMDAgICAgICAgICAgMDAwICAgXG4gICAgIyAgMDAwMDAwMCAgIDAwMDAwMDAwICAgICAwMDAgICAgICAgICAgICAwMDAwMDAwICAgMDAwMDAwMDAgICAgIDAwMCAgIFxuICAgICAgICBcbiAgICBAZ2V0OiAoa2V5LCB2YWx1ZSkgLT5cbiAgICAgICAgaWYgQGlwYz9cbiAgICAgICAgICAgIEBpcGMuc2VuZFN5bmMgJ3ByZWZHZXQnLCBrZXksIHZhbHVlXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIG5jb25mLmdldChrZXkpID8gdmFsdWVcbiAgICAgICAgICAgIFxuICAgIEBzZXQ6IChrZXksIHZhbHVlKSAtPlxuICAgICAgICBpZiBAaXBjP1xuICAgICAgICAgICAgQGlwYy5zZW5kICdwcmVmU2V0Jywga2V5LCB2YWx1ZVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQgQHRpbWVyIGlmIEB0aW1lclxuICAgICAgICAgICAgQHRpbWVyID0gc2V0VGltZW91dCBAc2F2ZSwgQHRpbWVvdXRcblxuICAgICAgICAgICAgaWYgdmFsdWU/XG4gICAgICAgICAgICAgICAgbmNvbmYuc2V0IGtleSwgdmFsdWUgICAgXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgbmNvbmYuY2xlYXIga2V5XG4gICAgICAgIFxuICAgIEBkZWw6IChrZXksIHZhbHVlKSAtPiBAc2V0IGtleVxuXG4gICAgIyAgMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAgICAwMDAgIDAwMDAwMDAwXG4gICAgIyAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgXG4gICAgIyAwMDAwMDAwICAgMDAwMDAwMDAwICAgMDAwIDAwMCAgIDAwMDAwMDAgXG4gICAgIyAgICAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgXG4gICAgIyAwMDAwMDAwICAgMDAwICAgMDAwICAgICAgMCAgICAgIDAwMDAwMDAwXG5cbiAgICBAc2F2ZTogKGNiKSA9PlxuICAgICAgICBjbGVhclRpbWVvdXQgQHRpbWVyIGlmIEB0aW1lclxuICAgICAgICBAdGltZXIgPSBudWxsXG4gICAgICAgIG5jb25mLnNhdmUgKGVycikgPT4gXG4gICAgICAgICAgICBsb2cgXCJuY29uZiBzYXZlIGVycm9yOlwiLCBlcnIgaWYgZXJyP1xuICAgICAgICAgICAgY2I/ICFlcnI/XG4gICAgICAgIFxubW9kdWxlLmV4cG9ydHMgPSBQcmVmc1xuIl19
//# sourceURL=../../coffee/tools/prefs.coffee